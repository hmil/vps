#!/bin/bash

export VERSION=1
export DOLLAR='$'
export PATH="$PATH:$VPS_HOME/bin"

export VPS_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."

SVC_DIR="$VPS_HOME/services"

source_config() {
  if [ -e "$VPS_HOME/.config" ]; then
    . "$VPS_HOME/.config"
  fi
}

configure() {

  echo "##########################"
  echo "### Awesome vps config ###"
  echo "##########################"

  if [ -z "$VPS_HOME" ]; then
    script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

    echo "Please set your VPS_HOME environment variable"
    echo "[1]: Ok"
    echo "2: I'm too lazy, set it to '$script_dir' for me"
    read input
    if [ "$input" -eq 2 ]; then
      echo "export VPS_HOME=\"$script_dir\"" >> ~/.bashrc
      export VPS_HOME="$script_dir"
      echo "please source your bashrc"
    fi
    exit 1
  fi

  if [ ! -e "$VPS_HOME/env" ]; then
    echo "env file is missing, aborting"
    exit 1
  fi

  source_config

  default_disk_root="/mnt/data"
  echo "Enter the data disk root ($default_disk_root)"
  read DISK_ROOT
  if [ -z "$DISK_ROOT" ]; then
    DISK_ROOT="$default_disk_root"
  fi

  cat > "$VPS_HOME/.config" <<EOF
export VPS_CONFIG_VERSION=$VERSION
export DISK_ROOT=$DISK_ROOT
EOF
}

do_setup() {
  if [ -e "$SVC_DIR/$1/setup.sh" ]; then
    cd "$SVC_DIR/$1"
    shift
    sh "./setup.sh" $@
  else
    echo "Invalid services name: $1"
  fi
}

do_start() {
  if [ -e "$SVC_DIR/$1/start.sh" ]; then
    cd "$SVC_DIR/$1"
    sh "./start.sh"
  else
    echo "Invalid services name: $1"
  fi
}

do_stop() {
  if [ -e "$SVC_DIR/$1/stop.sh" ]; then
    cd "$SVC_DIR/$1"
    sh "./stop.sh"
  else
    echo "Invalid project name: $1"
  fi
}

do_remove() {
  if [ -e "$SVC_DIR/$1/setup.sh" ]; then
    cd "$SVC_DIR/$1"
    shift
    sh "./remove.sh" $@
  else
    echo "Invalid project name: $1"
  fi
}

do_logs() {
  if [ -e "$SVC_DIR/$1/logs.sh" ]; then
    cd "$SVC_DIR/$1"
    shift
    sh "./logs.sh" $@
  else
    echo "Invalid project name: $1"
  fi
}

do_config() {
  if [ -e "$SVC_DIR/$1/config.sh" ]; then
    cd "$SVC_DIR/$1"
    shift
    sh "./config.sh" $@
  else
    echo "Invalid project name: $1"
  fi
}

do_shell() {
  cd "$VPS_HOME/services/$1"
  bash
}

usage() {
  cat 1>&2 <<EOF
usage: vps command service [args]

Available commands:
- setup
- start
- stop
- remove
- logs
- config
- shell
EOF
}

source_config

if [ -z "$VPS_CONFIG_VERSION" ] || [ "$VPS_CONFIG_VERSION" -lt "$VERSION" ]; then
  echo "Project is not configured, running config"
  configure
  if [ "$?" -ne 0 ]; then
    exit 1
  fi
fi

. "$VPS_HOME/.config"
. "$VPS_HOME/env"
. "$VPS_HOME/ports"

cmd="$1"
if [ -z "$cmd" ]; then
  usage
  exit 1
fi

shift
case $cmd in
  "setup" )
    do_setup $@
    ;;
  "start" )
    do_start $@
    ;;
  "stop" )
    do_stop $@
    ;;
  "remove" )
    do_remove $@
    ;;
  "logs" )
    do_logs $@
    ;;
  "config" )
    do_config $@
    ;;
  "shell" )
    do_shell $@
    ;;
  * )
    echo "invalid command: $cmd"
    ;;
esac
