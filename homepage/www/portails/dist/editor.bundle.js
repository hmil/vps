/*! For license information please see editor.bundle.js.LICENSE.txt */
(()=>{"use strict";var e={7418:e=>{var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),c=1;c<arguments.length;c++){for(var s in i=Object(arguments[c]))n.call(i,s)&&(u[s]=i[s]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},4448:(e,t,n)=>{var r=n(7294),a=n(7418),o=n(3840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},h={};function v(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(h,e)||!p.call(m,e)&&(d.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=60103,E=60106,x=60107,S=60108,C=60114,P=60109,O=60110,I=60112,N=60113,j=60120,T=60115,z=60116,M=60121,L=60128,R=60129,D=60130,F=60131;if("function"==typeof Symbol&&Symbol.for){var A=Symbol.for;_=A("react.element"),E=A("react.portal"),x=A("react.fragment"),S=A("react.strict_mode"),C=A("react.profiler"),P=A("react.provider"),O=A("react.context"),I=A("react.forward_ref"),N=A("react.suspense"),j=A("react.suspense_list"),T=A("react.memo"),z=A("react.lazy"),M=A("react.block"),A("react.scope"),L=A("react.opaque.id"),R=A("react.debug_trace_mode"),D=A("react.offscreen"),F=A("react.legacy_hidden")}var U,Y="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=Y&&e[Y]||e["@@iterator"])?e:null}function X(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?X(e):""}function $(e){switch(e.tag){case 5:return X(e.type);case 16:return X("Lazy");case 13:return X("Suspense");case 19:return X("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case E:return"Portal";case C:return"Profiler";case S:return"StrictMode";case N:return"Suspense";case j:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case T:return H(e.type);case M:return H(e._render);case z:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=Q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,he,ve=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var _e=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ee(e,t){if(t){if(_e[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Pe=null,Oe=null;function Ie(e){if(e=Jr(e)){if("function"!=typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ea(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Pe?Oe?Oe.push(e):Oe=[e]:Pe=e}function je(){if(Pe){var e=Pe,t=Oe;if(Oe=Pe=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Te(e,t){return e(t)}function ze(e,t,n,r,a){return e(t,n,r,a)}function Me(){}var Le=Te,Re=!1,De=!1;function Fe(){null===Pe&&null===Oe||(Me(),je())}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Ue=!1;if(f)try{var Ye={};Object.defineProperty(Ye,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",Ye,Ye),window.removeEventListener("test",Ye,Ye)}catch(he){Ue=!1}function Ve(e,t,n,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Xe=!1,Be=null,We=!1,$e=null,He={onError:function(e){Xe=!0,Be=e}};function Ke(e,t,n,r,a,o,i,l,u){Xe=!1,Be=null,Ve.apply(He,arguments)}function Qe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function qe(e){if(Qe(e)!==e)throw Error(i(188))}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Ze,et,tt,nt,rt=!1,at=[],ot=null,it=null,lt=null,ut=new Map,ct=new Map,st=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=dt(t,n,r,a,o),null!==t&&null!==(t=Jr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function ht(e){var t=qr(e.target);if(null!==t){var n=Qe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){vt(e)&&n.delete(t)}function yt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&Ze(e);break}for(var t=e.targetContainers;0<t.length;){var n=qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==ot&&vt(ot)&&(ot=null),null!==it&&vt(it)&&(it=null),null!==lt&&vt(lt)&&(lt=null),ut.forEach(gt),ct.forEach(gt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,yt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&bt(ot,e),null!==it&&bt(it,e),null!==lt&&bt(lt,e),ut.forEach(t),ct.forEach(t),n=0;n<st.length;n++)(r=st[n]).blockedOn===e&&(r.blockedOn=null);for(;0<st.length&&null===(n=st[0]).blockedOn;)ht(n),null===n.blockedOn&&st.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var _t={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Et={},xt={};function St(e){if(Et[e])return Et[e];if(!_t[e])return e;var t,n=_t[e];for(t in n)if(n.hasOwnProperty(t)&&t in xt)return Et[e]=n[t];return e}f&&(xt=document.createElement("div").style,"AnimationEvent"in window||(delete _t.animationend.animation,delete _t.animationiteration.animation,delete _t.animationstart.animation),"TransitionEvent"in window||delete _t.transitionend.transition);var Ct=St("animationend"),Pt=St("animationiteration"),Ot=St("animationstart"),It=St("transitionend"),Nt=new Map,jt=new Map,Tt=["abort","abort",Ct,"animationEnd",Pt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",It,"transitionEnd","waiting","waiting"];function zt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),jt.set(r,t),Nt.set(r,a),c(a,[r])}}(0,o.unstable_now)();var Mt=8;function Lt(e){if(0!=(1&e))return Mt=15,1;if(0!=(2&e))return Mt=14,2;if(0!=(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!=(32&e)?(Mt=11,32):0!=(t=192&e)?(Mt=10,t):0!=(256&e)?(Mt=9,256):0!=(t=3584&e)?(Mt=8,t):0!=(4096&e)?(Mt=7,4096):0!=(t=4186112&e)?(Mt=6,t):0!=(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!=(134217728&e)?(Mt=3,134217728):0!=(t=805306368&e)?(Mt=2,t):0!=(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function Rt(e,t){var n=e.pendingLanes;if(0===n)return Mt=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=Mt=15;else if(0!=(o=134217727&n)){var u=o&~i;0!==u?(r=Lt(u),a=Mt):0!=(l&=o)&&(r=Lt(l),a=Mt)}else 0!=(o=n&~i)?(r=Lt(o),a=Mt):0!==l&&(r=Lt(l),a=Mt);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Lt(t),a<=Mt)return t;Mt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Vt(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=At(24&~t))?Ft(10,t):e;case 10:return 0===(e=At(192&~t))?Ft(8,t):e;case 8:return 0===(e=At(3584&~t))&&0===(e=At(4186112&~t))&&(e=512),e;case 2:return 0===(t=At(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function At(e){return e&-e}function Ut(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Yt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Xt(e)/Bt|0)|0},Xt=Math.log,Bt=Math.LN2,Wt=o.unstable_UserBlockingPriority,$t=o.unstable_runWithPriority,Ht=!0;function Kt(e,t,n,r){Re||Me();var a=Gt,o=Re;Re=!0;try{ze(a,e,t,n,r)}finally{(Re=o)||Fe()}}function Qt(e,t,n,r){$t(Wt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var a;if(Ht)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var o=qt(e,t,n,r);if(null===o)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=mt(ot,e,t,n,r,a),!0;case"dragenter":return it=mt(it,e,t,n,r,a),!0;case"mouseover":return lt=mt(lt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ut.set(o,mt(ut.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,ct.set(o,mt(ct.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;pt(e,r)}Nr(e,t,r,null,n)}}}function qt(e,t,n,r){var a=Se(r);if(null!==(a=qr(a))){var o=Qe(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ge(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Nr(e,t,r,a,n),null}var Jt=null,Zt=null,en=null;function tn(){if(en)return en;var e,t,n=Zt,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,cn,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(sn),dn=a({},sn,{view:0,detail:0}),pn=on(dn),mn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(ln=e.screenX-cn.screenX,un=e.screenY-cn.screenY):un=ln=0,cn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),hn=on(mn),vn=on(a({},mn,{dataTransfer:0})),gn=on(a({},dn,{relatedTarget:0})),yn=on(a({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=on(a({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},_n={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},En={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=En[e])&&!!t[e]}function Sn(){return xn}var Cn=on(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?_n[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=on(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),In=on(a({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=on(a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),jn=[9,13,27,32],Tn=f&&"CompositionEvent"in window,zn=null;f&&"documentMode"in document&&(zn=document.documentMode);var Mn=f&&"TextEvent"in window&&!zn,Ln=f&&(!Tn||zn&&8<zn&&11>=zn),Rn=String.fromCharCode(32),Dn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==jn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function An(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Yn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Yn[e.type]:"textarea"===t}function Xn(e,t,n,r){Ne(r),0<(t=Tr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Bn=null,Wn=null;function $n(e){xr(e,0)}function Hn(e){if(q(Zr(e)))return e}function Kn(e,t){if("change"===e)return t}var Qn=!1;if(f){var Gn;if(f){var qn="oninput"in document;if(!qn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),qn="function"==typeof Jn.oninput}Gn=qn}else Gn=!1;Qn=Gn&&(!document.documentMode||9<document.documentMode)}function Zn(){Bn&&(Bn.detachEvent("onpropertychange",er),Wn=Bn=null)}function er(e){if("value"===e.propertyName&&Hn(Wn)){var t=[];if(Xn(t,Wn,e,Se(e)),e=$n,Re)e(t);else{Re=!0;try{Te(e,t)}finally{Re=!1,Fe()}}}}function tr(e,t,n){"focusin"===e?(Zn(),Wn=n,(Bn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Zn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Hn(Wn)}function rr(e,t){if("click"===e)return Hn(t)}function ar(e,t){if("input"===e||"change"===e)return Hn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function lr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function sr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?sr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,hr=null,vr=null,gr=!1;function yr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==J(r)||(r="selectionStart"in(r=mr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&lr(vr,r)||(vr=r,0<(r=Tr(hr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}zt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zt(Tt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)jt.set(br[wr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_r=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Er(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,c){if(Ke.apply(this,arguments),Xe){if(!Xe)throw Error(i(198));var s=Be;Xe=!1,Be=null,We||(We=!0,$e=s)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Er(a,l,c),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,c=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Er(a,l,c),o=u}}}if(We)throw e=$e,We=!1,$e=null,e}function Sr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Ir(t,e,2,!1),n.add(r))}var Cr="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Cr]||(e[Cr]=!0,l.forEach((function(t){_r.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&_r.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Ir(o,e,a,t),i.add(l))}function Ir(e,t,n,r){var a=jt.get(t);switch(void 0===a?2:a){case 0:a=Kt;break;case 1:a=Qt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Nr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=qr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(De)return e();De=!0;try{Le(e,t,n)}finally{De=!1,Fe()}}((function(){var r=o,a=Se(n),i=[];e:{var l=Nt.get(e);if(void 0!==l){var u=fn,c=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=Cn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case Ct:case Pt:case Ot:u=yn;break;case It:u=In;break;case"scroll":u=pn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=Ae(m,d))&&s.push(jr(m,h,p))),f)break;m=m.return}0<s.length&&(l=new u(l,c,null,n,a),i.push({event:l,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!qr(c)&&!c[Qr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?qr(c):null)&&(c!==(f=Qe(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=hn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(s=Pn,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?l:Zr(u),p=null==c?l:Zr(c),(l=new s(h,m+"leave",u,n,a)).target=f,l.relatedTarget=p,h=null,qr(a)===r&&((s=new s(d,m+"enter",c,n,a)).target=p,s.relatedTarget=f,h=s),f=h,u&&c)e:{for(d=c,m=0,p=s=u;p;p=zr(p))m++;for(p=0,h=d;h;h=zr(h))p++;for(;0<m-p;)s=zr(s),m--;for(;0<p-m;)d=zr(d),p--;for(;m--;){if(s===d||null!==d&&s===d.alternate)break e;s=zr(s),d=zr(d)}s=null}else s=null;null!==u&&Mr(i,l,u,s,!1),null!==c&&null!==f&&Mr(i,f,c,s,!0)}if("select"===(u=(l=r?Zr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Kn;else if(Vn(l))if(Qn)v=ar;else{v=nr;var g=tr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=rr);switch(v&&(v=v(e,r))?Xn(i,v,n,a):(g&&g(e,l,r),"focusout"===e&&(g=l._wrapperState)&&g.controlled&&"number"===l.type&&ae(l,"number",l.value)),g=r?Zr(r):window,e){case"focusin":(Vn(g)||"true"===g.contentEditable)&&(mr=g,hr=r,vr=null);break;case"focusout":vr=hr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,yr(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":yr(i,n,a)}var y;if(Tn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(y=tn()):(Zt="value"in(Jt=a)?Jt.value:Jt.textContent,Un=!0)),0<(g=Tr(r,b)).length&&(b=new wn(b,e,null,n,a),i.push({event:b,listeners:g}),(y||null!==(y=An(n)))&&(b.data=y))),(y=Mn?function(e,t){switch(e){case"compositionend":return An(t);case"keypress":return 32!==t.which?null:(Dn=!0,Rn);case"textInput":return(e=t.data)===Rn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Tn&&Fn(e,t)?(e=tn(),en=Zt=Jt=null,Un=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Tr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}xr(i,t)}))}function jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Tr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ae(e,n))&&r.unshift(jr(e,o,a)),null!=(o=Ae(e,t))&&r.push(jr(e,o,a))),e=e.return}return r}function zr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,c=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==c&&(l=c,a?null!=(u=Ae(n,o))&&i.unshift(jr(n,u,l)):a||null!=(u=Ae(n,o))&&i.push(jr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Lr(){}var Rr=null,Dr=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ar(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Ur="function"==typeof setTimeout?setTimeout:void 0,Yr="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Xr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Br(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Wr=0,$r=Math.random().toString(36).slice(2),Hr="__reactFiber$"+$r,Kr="__reactProps$"+$r,Qr="__reactContainer$"+$r,Gr="__reactEvents$"+$r;function qr(e){var t=e[Hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Qr]||n[Hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Br(e);null!==e;){if(n=e[Hr])return n;e=Br(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Hr]||e[Qr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Zr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Kr]||null}function ta(e){var t=e[Gr];return void 0===t&&(t=e[Gr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function ia(e,t){ra++,na[ra]=e.current,e.current=t}var la={},ua=aa(la),ca=aa(!1),sa=la;function fa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=e.childContextTypes}function pa(){oa(ca),oa(ua)}function ma(e,t,n){if(ua.current!==la)throw Error(i(168));ia(ua,t),ia(ca,n)}function ha(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,H(t)||"Unknown",o));return a({},n,r)}function va(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,sa=ua.current,ia(ua,e),ia(ca,ca.current),!0}function ga(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ha(e,t,sa),r.__reactInternalMemoizedMergedChildContext=e,oa(ca),oa(ua),ia(ua,e)):oa(ca),ia(ca,n)}var ya=null,ba=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,_a=o.unstable_cancelCallback,Ea=o.unstable_shouldYield,xa=o.unstable_requestPaint,Sa=o.unstable_now,Ca=o.unstable_getCurrentPriorityLevel,Pa=o.unstable_ImmediatePriority,Oa=o.unstable_UserBlockingPriority,Ia=o.unstable_NormalPriority,Na=o.unstable_LowPriority,ja=o.unstable_IdlePriority,Ta={},za=void 0!==xa?xa:function(){},Ma=null,La=null,Ra=!1,Da=Sa(),Fa=1e4>Da?Sa:function(){return Sa()-Da};function Aa(){switch(Ca()){case Pa:return 99;case Oa:return 98;case Ia:return 97;case Na:return 96;case ja:return 95;default:throw Error(i(332))}}function Ua(e){switch(e){case 99:return Pa;case 98:return Oa;case 97:return Ia;case 96:return Na;case 95:return ja;default:throw Error(i(332))}}function Ya(e,t){return e=Ua(e),wa(e,t)}function Va(e,t,n){return e=Ua(e),ka(e,t,n)}function Xa(){if(null!==La){var e=La;La=null,_a(e)}Ba()}function Ba(){if(!Ra&&null!==Ma){Ra=!0;var e=0;try{var t=Ma;Ya(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ma=null}catch(t){throw null!==Ma&&(Ma=Ma.slice(e+1)),ka(Pa,Xa),t}finally{Ra=!1}}}var Wa=k.ReactCurrentBatchConfig;function $a(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ha=aa(null),Ka=null,Qa=null,Ga=null;function qa(){Ga=Qa=Ka=null}function Ja(e){var t=Ha.current;oa(Ha),e.type._context._currentValue=t}function Za(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){Ka=e,Ga=Qa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ti=!0),e.firstContext=null)}function to(e,t){if(Ga!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ga=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Qa){if(null===Ka)throw Error(i(308));Qa=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Qa=Qa.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function lo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=o.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var m=e,h=i;switch(u=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){d=m.call(p,d,u);break e}d=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(u="function"==typeof(m=h.payload)?m.call(p,d,u):m))break e;d=a({},d,u);break e;case 2:no=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,Ml|=l,e.lanes=l,e.memoizedState=d}}function co(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var so=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Qe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),lu(e,r,n)}};function mo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,o))}function ho(e,t,n){var r=!1,a=la,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?sa:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):la),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function vo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function go(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=so,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?sa:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yo=Array.isArray;function bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===so&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Du(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bo(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=bo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Au(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=bo(e,null,t),n.return=e,n;case E:return(t=Vu(t,e.mode,n)).return=e,t}if(yo(t)||V(t))return(t=Au(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case E:return n.key===a?s(e,t,n,r):null}if(yo(n)||V(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yo(r)||V(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function h(a,i,l,u){for(var c=null,s=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var g=p(a,f,l[h],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(a,f),i=o(g,i,h),null===s?c=g:s.sibling=g,s=g,f=v}if(h===l.length)return n(a,f),c;if(null===f){for(;h<l.length;h++)null!==(f=d(a,l[h],u))&&(i=o(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);h<l.length;h++)null!==(v=m(f,a,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=o(v,i,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,l,u,c){var s=V(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,h=l,v=l=0,g=null,y=u.next();null!==h&&!y.done;v++,y=u.next()){h.index>v?(g=h,h=null):g=h.sibling;var b=p(a,h,y.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(a,h),l=o(b,l,v),null===f?s=b:f.sibling=b,f=b,h=g}if(y.done)return n(a,h),s;if(null===h){for(;!y.done;v++,y=u.next())null!==(y=d(a,y.value,c))&&(l=o(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(h=r(a,h);!y.done;v++,y=u.next())null!==(y=m(h,a,v,y.value,c))&&(e&&null!==y.alternate&&h.delete(null===y.key?v:y.key),l=o(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&h.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===x&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case _:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===x){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=bo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===x?((r=Au(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Fu(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return l(e);case E:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Yu(o,e.mode,u)).return=e,e=r),l(e);if(yo(o))return h(e,r,o,u);if(V(o))return v(e,r,o,u);if(s&&wo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,H(e.type)||"Component"))}return n(e,r)}}var _o=ko(!0),Eo=ko(!1),xo={},So=aa(xo),Co=aa(xo),Po=aa(xo);function Oo(e){if(e===xo)throw Error(i(174));return e}function Io(e,t){switch(ia(Po,t),ia(Co,e),ia(So,xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(So),ia(So,t)}function No(){oa(So),oa(Co),oa(Po)}function jo(e){Oo(Po.current);var t=Oo(So.current),n=pe(t,e.type);t!==n&&(ia(Co,e),ia(So,n))}function To(e){Co.current===e&&(oa(So),oa(Co))}var zo=aa(0);function Mo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Lo=null,Ro=null,Do=!1;function Fo(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ao(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Uo(e){if(Do){var t=Ro;if(t){var n=t;if(!Ao(e,t)){if(!(t=Xr(n.nextSibling))||!Ao(e,t))return e.flags=-1025&e.flags|2,Do=!1,void(Lo=e);Fo(Lo,n)}Lo=e,Ro=Xr(t.firstChild)}else e.flags=-1025&e.flags|2,Do=!1,Lo=e}}function Yo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Lo=e}function Vo(e){if(e!==Lo)return!1;if(!Do)return Yo(e),Do=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ar(t,e.memoizedProps))for(t=Ro;t;)Fo(e,t),t=Xr(t.nextSibling);if(Yo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ro=Xr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ro=null}}else Ro=Lo?Xr(e.stateNode.nextSibling):null;return!0}function Xo(){Ro=Lo=null,Do=!1}var Bo=[];function Wo(){for(var e=0;e<Bo.length;e++)Bo[e]._workInProgressVersionPrimary=null;Bo.length=0}var $o=k.ReactCurrentDispatcher,Ho=k.ReactCurrentBatchConfig,Ko=0,Qo=null,Go=null,qo=null,Jo=!1,Zo=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,o){if(Ko=o,Qo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,$o.current=null===e||null===e.memoizedState?Oi:Ii,e=n(r,a),Zo){o=0;do{if(Zo=!1,!(25>o))throw Error(i(301));o+=1,qo=Go=null,t.updateQueue=null,$o.current=Ni,e=n(r,a)}while(Zo)}if($o.current=Pi,t=null!==Go&&null!==Go.next,Ko=0,qo=Go=Qo=null,Jo=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===qo?Qo.memoizedState=qo=e:qo=qo.next=e,qo}function ai(){if(null===Go){var e=Qo.alternate;e=null!==e?e.memoizedState:null}else e=Go.next;var t=null===qo?Qo.memoizedState:qo.next;if(null!==t)qo=t,Go=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Go=e).memoizedState,baseState:Go.baseState,baseQueue:Go.baseQueue,queue:Go.queue,next:null},null===qo?Qo.memoizedState=qo=e:qo=qo.next=e}return qo}function oi(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Go,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,c=a;do{var s=c.lane;if((Ko&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Qo.lanes|=s,Ml|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=l,or(r,t.memoizedState)||(Ti=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);or(o,t.memoizedState)||(Ti=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ui(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Ko&e)===e)&&(t._workInProgressVersionPrimary=r,Bo.push(t))),e)return n(t._source);throw Bo.push(t),Error(i(350))}function ci(e,t,n,r){var a=Cl;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=$o.current,c=u.useState((function(){return ui(a,t,n)})),s=c[1],f=c[0];c=qo;var d=e.memoizedState,p=d.refs,m=p.getSnapshot,h=d.source;d=d.subscribe;var v=Qo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!or(l,e)){e=n(t._source),or(f,e)||(s(e),e=iu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-Vt(i),c=1<<u;r[u]|=e,i&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(m,n)&&or(h,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:f}).dispatch=s=Ci.bind(null,Qo,e),c.queue=e,c.baseQueue=null,f=ui(a,t,n),c.memoizedState=c.baseState=f),f}function si(e,t,n){return ci(ai(),e,t,n)}function fi(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=Ci.bind(null,Qo,e),[t.memoizedState,e]}function di(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Qo.updateQueue)?(t={lastEffect:null},Qo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pi(e){return e={current:e},ri().memoizedState=e}function mi(){return ai().memoizedState}function hi(e,t,n,r){var a=ri();Qo.flags|=e,a.memoizedState=di(1|t,n,void 0,void 0===r?null:r)}function vi(e,t,n,r){var a=ai();r=void 0===r?null:r;var o=void 0;if(null!==Go){var i=Go.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void di(t,n,o,r)}Qo.flags|=e,a.memoizedState=di(1|t,n,o,r)}function gi(e,t){return hi(516,4,e,t)}function yi(e,t){return vi(516,4,e,t)}function bi(e,t){return vi(4,2,e,t)}function wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ki(e,t,n){return n=null!=n?n.concat([e]):null,vi(4,2,wi.bind(null,t,e),n)}function _i(){}function Ei(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xi(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Si(e,t){var n=Aa();Ya(98>n?98:n,(function(){e(!0)})),Ya(97<n?97:n,(function(){var n=Ho.transition;Ho.transition=1;try{e(!1),t()}finally{Ho.transition=n}}))}function Ci(e,t,n){var r=ou(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Qo||null!==i&&i===Qo)Zo=Jo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,or(u,l))return}catch(e){}lu(e,a,r)}}var Pi={readContext:to,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},Oi={readContext:to,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:gi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,hi(4,2,wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return hi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ci.bind(null,Qo,e),[r.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:_i,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return gi((function(){var t=Ho.transition;Ho.transition=1;try{r(e)}finally{Ho.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=Si.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ci(r,e,t,n)},useOpaqueIdentifier:function(){if(Do){var e=!1,t=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Wr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Qo.mode)&&(Qo.flags|=516,di(5,(function(){n("r:"+(Wr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Wr++).toString(36)),t},unstable_isNewReconciler:!1},Ii={readContext:to,useCallback:Ei,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:xi,useReducer:ii,useRef:mi,useState:function(){return ii(oi)},useDebugValue:_i,useDeferredValue:function(e){var t=ii(oi),n=t[0],r=t[1];return yi((function(){var t=Ho.transition;Ho.transition=1;try{r(e)}finally{Ho.transition=t}}),[e]),n},useTransition:function(){var e=ii(oi)[0];return[mi().current,e]},useMutableSource:si,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Ni={readContext:to,useCallback:Ei,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:xi,useReducer:li,useRef:mi,useState:function(){return li(oi)},useDebugValue:_i,useDeferredValue:function(e){var t=li(oi),n=t[0],r=t[1];return yi((function(){var t=Ho.transition;Ho.transition=1;try{r(e)}finally{Ho.transition=t}}),[e]),n},useTransition:function(){var e=li(oi)[0];return[mi().current,e]},useMutableSource:si,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},ji=k.ReactCurrentOwner,Ti=!1;function zi(e,t,n,r){t.child=null===e?Eo(t,null,n,r):_o(t,e.child,n,r)}function Mi(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=ni(e,t,n,r,o,a),null===e||Ti?(t.flags|=1,zi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Ji(e,t,a))}function Li(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||Ru(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ri(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)?Ji(e,t,o):(t.flags|=1,(e=Du(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ri(e,t,n,r,a,o){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(Ti=!1,0==(o&a))return t.lanes=e.lanes,Ji(e,t,o);0!=(16384&e.flags)&&(Ti=!0)}return Ai(e,t,n,r,o)}function Di(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return zi(e,t,a,n),t.child}function Fi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ai(e,t,n,r,a){var o=da(n)?sa:ua.current;return o=fa(t,o),eo(t,a),n=ni(e,t,n,r,o,a),null===e||Ti?(t.flags|=1,zi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Ji(e,t,a))}function Ui(e,t,n,r,a){if(da(n)){var o=!0;va(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ho(t,n,r),go(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;c="object"==typeof c&&null!==c?to(c):fa(t,c=da(n)?sa:ua.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&vo(t,i,r,c),no=!1;var d=t.memoizedState;i.state=d,uo(t,r,i,a),u=t.memoizedState,l!==r||d!==u||ca.current||no?("function"==typeof s&&(fo(t,n,s,r),u=t.memoizedState),(l=no||mo(t,n,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ao(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:$a(t.type,l),i.props=c,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?to(u):fa(t,u=da(n)?sa:ua.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&vo(t,i,r,u),no=!1,d=t.memoizedState,i.state=d,uo(t,r,i,a);var m=t.memoizedState;l!==f||d!==m||ca.current||no?("function"==typeof p&&(fo(t,n,p,r),m=t.memoizedState),(c=no||mo(t,n,c,r,d,m,u))?(s||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=m),i.props=r,i.state=m,i.context=u,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Yi(e,t,n,r,o,a)}function Yi(e,t,n,r,a,o){Fi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&ga(t,n,!1),Ji(e,t,o);r=t.stateNode,ji.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=_o(t,e.child,null,o),t.child=_o(t,null,l,o)):zi(e,t,l,o),t.memoizedState=r.state,a&&ga(t,n,!0),t.child}function Vi(e){var t=e.stateNode;t.pendingContext?ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ma(0,t.context,!1),Io(e,t.containerInfo)}var Xi,Bi,Wi,$i={dehydrated:null,retryLane:0};function Hi(e,t,n){var r,a=t.pendingProps,o=zo.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(zo,1&o),null===e?(void 0!==a.fallback&&Uo(t),e=a.children,o=a.fallback,i?(e=Ki(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=$i,e):"number"==typeof a.unstable_expectedLoadTime?(e=Ki(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=$i,t.lanes=33554432,e):((n=Uu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Du(i,l),null!==e?r=Du(e,r):(r=Au(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=$i,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Du(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Ki(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Uu(t,a,0,null),n=Au(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Qi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Za(e.return,t)}function Gi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function qi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(zi(e,t,r.children,n),0!=(2&(r=zo.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Qi(e,n);else if(19===e.tag)Qi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(zo,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Mo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Gi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Mo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Gi(t,!0,n,null,o,t.lastEffect);break;case"together":Gi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ji(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Du(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Du(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Zi(e,t){if(!Do)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return No(),oa(ca),oa(ua),Wo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:To(t);var o=Oo(Po.current);if(n=t.type,null!==e&&null!=t.stateNode)Bi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Oo(So.current),Vo(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Hr]=t,r[Kr]=l,n){case"dialog":Sr("cancel",r),Sr("close",r);break;case"iframe":case"object":case"embed":Sr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Sr(kr[e],r);break;case"source":Sr("error",r);break;case"img":case"image":case"link":Sr("error",r),Sr("load",r);break;case"details":Sr("toggle",r);break;case"input":ee(r,l),Sr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Sr("invalid",r);break;case"textarea":ue(r,l),Sr("invalid",r)}for(var c in Ee(n,l),e=null,l)l.hasOwnProperty(c)&&(o=l[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Sr("scroll",r));switch(n){case"input":G(r),re(r,l,!0);break;case"textarea":G(r),se(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Lr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Hr]=t,e[Kr]=r,Xi(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Sr("cancel",e),Sr("close",e),o=r;break;case"iframe":case"object":case"embed":Sr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)Sr(kr[o],e);o=r;break;case"source":Sr("error",e),o=r;break;case"img":case"image":case"link":Sr("error",e),Sr("load",e),o=r;break;case"details":Sr("toggle",e),o=r;break;case"input":ee(e,r),o=Z(e,r),Sr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Sr("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),Sr("invalid",e);break;default:o=r}Ee(n,o);var s=o;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Sr("scroll",e):null!=f&&w(e,l,f,c))}switch(n){case"input":G(e),re(e,r,!1);break;case"textarea":G(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Lr)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Oo(Po.current),Oo(So.current),Vo(t)?(r=t.stateNode,n=t.memoizedProps,r[Hr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Hr]=t,t.stateNode=r)}return null;case 13:return oa(zo),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&zo.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),null===Cl||0==(134217727&Ml)&&0==(134217727&Ll)||fu(Cl,Ol))),(r||n)&&(t.flags|=4),null);case 4:return No(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return Ja(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(zo),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(c=r.rendering))if(l)Zi(r,!1);else{if(0!==jl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Mo(e))){for(t.flags|=64,Zi(r,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(zo,1&zo.current|2),t.child}e=e.sibling}null!==r.tail&&Fa()>Al&&(t.flags|=64,l=!0,Zi(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Mo(c))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Zi(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Do)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fa()-r.renderingStartTime>Al&&1073741824!==n&&(t.flags|=64,l=!0,Zi(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fa(),n.sibling=null,t=zo.current,ia(zo,l?1&t|2:1&t),n):null;case 23:case 24:return mu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function tl(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(No(),oa(ca),oa(ua),Wo(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return To(e),null;case 13:return oa(zo),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(zo),null;case 4:return No(),null;case 10:return Ja(e),null;case 23:case 24:return mu(),null;default:return null}}function nl(e,t){try{var n="",r=t;do{n+=$(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function rl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Xi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Oo(So.current);var i,l=null;switch(n){case"input":o=Z(e,o),r=Z(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Lr)}for(f in Ee(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(i in c)c.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(n||(n={}),n[i]=s[i])}else n||(l||(l=[]),l.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Sr("scroll",e),l||c===s||(l=[])):"object"==typeof s&&null!==s&&s.$$typeof===L?s.toString():(l=l||[]).push(f,s))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Wi=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xl||(Xl=!0,Bl=r),rl(0,t)},n}function il(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return rl(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),rl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ll="function"==typeof WeakSet?WeakSet:Set;function ul(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ju(e,t)}else t.current=null}function cl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:$a(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function sl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Ou(n,e),Pu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:$a(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&co(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}co(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function dl(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ya,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Ou(t,n);else{r=t;try{a()}catch(e){ju(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ul(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){ju(t,e)}break;case 5:ul(t);break;case 4:yl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ml(e){return 5===e.tag||3===e.tag||4===e.tag}function hl(e){e:{for(var t=e.return;null!==t;){if(ml(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ml(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?vl(e,n,t):gl(e,n,t)}function vl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Lr));else if(4!==r&&null!==(e=e.child))for(vl(e,t,n),e=e.sibling;null!==e;)vl(e,t,n),e=e.sibling}function gl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function yl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,c=u;;)if(dl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(dl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Kr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,a),t=xe(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ve(n,u):"children"===l?ge(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fl=Fa(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(i(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ll),t.forEach((function(t){var r=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var _l=Math.ceil,El=k.ReactCurrentDispatcher,xl=k.ReactCurrentOwner,Sl=0,Cl=null,Pl=null,Ol=0,Il=0,Nl=aa(0),jl=0,Tl=null,zl=0,Ml=0,Ll=0,Rl=0,Dl=null,Fl=0,Al=1/0;function Ul(){Al=Fa()+500}var Yl,Vl=null,Xl=!1,Bl=null,Wl=null,$l=!1,Hl=null,Kl=90,Ql=[],Gl=[],ql=null,Jl=0,Zl=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&Sl)?Fa():-1!==eu?eu:eu=Fa()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Aa()?1:2;if(0===tu&&(tu=zl),0!==Wa.transition){0!==nu&&(nu=null!==Dl?Dl.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Aa(),e=Ft(0!=(4&Sl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function lu(e,t,n){if(50<Jl)throw Jl=0,Zl=null,Error(i(185));if(null===(e=uu(e,t)))return null;Yt(e,t,n),e===Cl&&(Ll|=t,4===jl&&fu(e,Ol));var r=Aa();1===t?0!=(8&Sl)&&0==(48&Sl)?du(e):(cu(e,n),0===Sl&&(Ul(),Xa())):(0==(4&Sl)||98!==r&&99!==r||(null===ql?ql=new Set([e]):ql.add(e)),cu(e,n)),Dl=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Vt(l),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,Lt(c);var f=Mt;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(r=Rt(e,e===Cl?Ol:0),t=Mt,0===r)null!==n&&(n!==Ta&&_a(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ta&&_a(n)}15===t?(n=du.bind(null,e),null===Ma?(Ma=[n],La=ka(Pa,Ba)):Ma.push(n),n=Ta):n=14===t?Va(99,du.bind(null,e)):Va(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),su.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function su(e){if(eu=-1,nu=tu=0,0!=(48&Sl))throw Error(i(327));var t=e.callbackNode;if(Cu()&&e.callbackNode!==t)return null;var n=Rt(e,e===Cl?Ol:0);if(0===n)return null;var r=n,a=Sl;Sl|=16;var o=gu();for(Cl===e&&Ol===r||(Ul(),hu(e,r));;)try{wu();break}catch(t){vu(e,t)}if(qa(),El.current=o,Sl=a,null!==Pl?r=0:(Cl=null,Ol=0,r=jl),0!=(zl&Ll))hu(e,0);else if(0!==r){if(2===r&&(Sl|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Dt(e))&&(r=yu(e,n))),1===r)throw t=Tl,hu(e,0),fu(e,n),cu(e,Fa()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Eu(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Fl+500-Fa())){if(0!==Rt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Ur(Eu.bind(null,e),r);break}Eu(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-Vt(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=Fa()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*_l(n/1960))-n)){e.timeoutHandle=Ur(Eu.bind(null,e),n);break}Eu(e);break;case 5:Eu(e);break;default:throw Error(i(329))}}return cu(e,Fa()),e.callbackNode===t?su.bind(null,e):null}function fu(e,t){for(t&=~Rl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&Sl))throw Error(i(327));if(Cu(),e===Cl&&0!=(e.expiredLanes&Ol)){var t=Ol,n=yu(e,t);0!=(zl&Ll)&&(n=yu(e,t=Rt(e,t)))}else n=yu(e,t=Rt(e,0));if(0!==e.tag&&2===n&&(Sl|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Dt(e))&&(n=yu(e,t))),1===n)throw n=Tl,hu(e,0),fu(e,t),cu(e,Fa()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Eu(e),cu(e,Fa()),null}function pu(e,t){ia(Nl,Il),Il|=t,zl|=t}function mu(){Il=Nl.current,oa(Nl)}function hu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Yr(n)),null!==Pl)for(n=Pl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:No(),oa(ca),oa(ua),Wo();break;case 5:To(r);break;case 4:No();break;case 13:case 19:oa(zo);break;case 10:Ja(r);break;case 23:case 24:mu()}n=n.return}Cl=e,Pl=Du(e.current,null),Ol=Il=zl=t,jl=0,Tl=null,Rl=Ll=Ml=0}function vu(e,t){for(;;){var n=Pl;try{if(qa(),$o.current=Pi,Jo){for(var r=Qo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Jo=!1}if(Ko=0,qo=Go=Qo=null,Zo=!1,xl.current=null,null===n||null===n.return){jl=1,Tl=t,Pl=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&zo.current),d=i;do{var p;if(p=13===d.tag){var m=d.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var h=d.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var g=new Set;g.add(c),d.updateQueue=g}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oo(-1,1);y.tag=2,io(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new al,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=Tu.bind(null,o,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((H(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==jl&&(jl=2),u=nl(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ol(0,o,t));break e;case 1:o=u;var k=d.type,_=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==_&&"function"==typeof _.componentDidCatch&&(null===Wl||!Wl.has(_)))){d.flags|=4096,t&=-t,d.lanes|=t,lo(d,il(d,o,t));break e}}d=d.return}while(null!==d)}_u(n)}catch(e){t=e,Pl===n&&null!==n&&(Pl=n=n.return);continue}break}}function gu(){var e=El.current;return El.current=Pi,null===e?Pi:e}function yu(e,t){var n=Sl;Sl|=16;var r=gu();for(Cl===e&&Ol===t||hu(e,t);;)try{bu();break}catch(t){vu(e,t)}if(qa(),Sl=n,El.current=r,null!==Pl)throw Error(i(261));return Cl=null,Ol=0,jl}function bu(){for(;null!==Pl;)ku(Pl)}function wu(){for(;null!==Pl&&!Ea();)ku(Pl)}function ku(e){var t=Yl(e.alternate,e,Il);e.memoizedProps=e.pendingProps,null===t?_u(e):Pl=t,xl.current=null}function _u(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=el(n,t,Il)))return void(Pl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Il)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=tl(t)))return n.flags&=2047,void(Pl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pl=t);Pl=t=e}while(null!==t);0===jl&&(jl=5)}function Eu(e){var t=Aa();return Ya(99,xu.bind(null,e,t)),null}function xu(e,t){do{Cu()}while(null!==Hl);if(0!=(48&Sl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Vt(o),s=1<<c;a[c]=0,l[c]=-1,u[c]=-1,o&=~s}if(null!==ql&&0==(24&r)&&ql.has(e)&&ql.delete(e),e===Cl&&(Pl=Cl=null,Ol=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Sl,Sl|=32,xl.current=null,Rr=Ht,dr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,m=0,h=0,v=l,g=null;t:for(;;){for(var y;v!==u||0!==o&&3!==v.nodeType||(d=f+o),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)g=v,v=y;for(;;){if(v===l)break t;if(g===u&&++m===o&&(d=f),g===c&&++h===s&&(p=f),null!==(y=v.nextSibling))break;g=(v=g).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:l,selectionRange:u},Ht=!1,ru=null,au=!1,Vl=r;do{try{Su()}catch(e){if(null===Vl)throw Error(i(330));ju(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);ru=null,Vl=r;do{try{for(l=e;null!==Vl;){var b=Vl.flags;if(16&b&&ge(Vl.stateNode,""),128&b){var w=Vl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:hl(Vl),Vl.flags&=-3;break;case 6:hl(Vl),Vl.flags&=-3,bl(Vl.alternate,Vl);break;case 1024:Vl.flags&=-1025;break;case 1028:Vl.flags&=-1025,bl(Vl.alternate,Vl);break;case 4:bl(Vl.alternate,Vl);break;case 8:yl(l,u=Vl);var _=u.alternate;pl(u),null!==_&&pl(_)}Vl=Vl.nextEffect}}catch(e){if(null===Vl)throw Error(i(330));ju(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);if(k=Dr,w=fr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&sr(b.ownerDocument.documentElement,b)){null!==l&&dr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,_=Math.min(l.start,u),l=void 0===l.end?_:Math.min(l.end,u),!k.extend&&_>l&&(u=l,l=_,_=u),u=cr(b,_),o=cr(b,l),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),_>l?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Ht=!!Rr,Dr=Rr=null,e.current=n,Vl=r;do{try{for(b=e;null!==Vl;){var E=Vl.flags;if(36&E&&sl(b,Vl.alternate,Vl),128&E){w=void 0;var x=Vl.ref;if(null!==x){var S=Vl.stateNode;switch(Vl.tag){case 5:w=S;break;default:w=S}"function"==typeof x?x(w):x.current=w}}Vl=Vl.nextEffect}}catch(e){if(null===Vl)throw Error(i(330));ju(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);Vl=null,za(),Sl=a}else e.current=n;if($l)$l=!1,Hl=e,Kl=t;else for(Vl=r;null!==Vl;)t=Vl.nextEffect,Vl.nextEffect=null,8&Vl.flags&&((E=Vl).sibling=null,E.stateNode=null),Vl=t;if(0===(r=e.pendingLanes)&&(Wl=null),1===r?e===Zl?Jl++:(Jl=0,Zl=e):Jl=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ya,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,Fa()),Xl)throw Xl=!1,e=Bl,Bl=null,e;return 0!=(8&Sl)||Xa(),null}function Su(){for(;null!==Vl;){var e=Vl.alternate;au||null===ru||(0!=(8&Vl.flags)?Je(Vl,ru)&&(au=!0):13===Vl.tag&&kl(e,Vl)&&Je(Vl,ru)&&(au=!0));var t=Vl.flags;0!=(256&t)&&cl(e,Vl),0==(512&t)||$l||($l=!0,Va(97,(function(){return Cu(),null}))),Vl=Vl.nextEffect}}function Cu(){if(90!==Kl){var e=97<Kl?97:Kl;return Kl=90,Ya(e,Iu)}return!1}function Pu(e,t){Ql.push(t,e),$l||($l=!0,Va(97,(function(){return Cu(),null})))}function Ou(e,t){Gl.push(t,e),$l||($l=!0,Va(97,(function(){return Cu(),null})))}function Iu(){if(null===Hl)return!1;var e=Hl;if(Hl=null,0!=(48&Sl))throw Error(i(331));var t=Sl;Sl|=32;var n=Gl;Gl=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));ju(o,e)}}for(n=Ql,Ql=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));ju(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Sl=t,Xa(),!0}function Nu(e,t,n){io(e,t=ol(0,t=nl(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(Yt(e,1,t),cu(e,t))}function ju(e,t){if(3===e.tag)Nu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Nu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){var a=il(n,e=nl(t,e),1);if(io(n,a),a=ou(),null!==(n=uu(n,1)))Yt(n,1,a),cu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Tu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Cl===e&&(Ol&n)===n&&(4===jl||3===jl&&(62914560&Ol)===Ol&&500>Fa()-Fl?hu(e,0):Rl|=n),cu(e,t)}function zu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Aa()?1:2:(0===tu&&(tu=zl),0===(t=At(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(Yt(e,t,n),cu(e,n))}function Mu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Lu(e,t,n,r){return new Mu(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Du(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)Ru(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case x:return Au(n.children,a,o,t);case R:l=8,a|=16;break;case S:l=8,a|=1;break;case C:return(e=Lu(12,n,t,8|a)).elementType=C,e.type=C,e.lanes=o,e;case N:return(e=Lu(13,n,t,a)).type=N,e.elementType=N,e.lanes=o,e;case j:return(e=Lu(19,n,t,a)).elementType=j,e.lanes=o,e;case D:return Uu(n,a,o,t);case F:return(e=Lu(24,n,t,a)).elementType=F,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:l=10;break e;case O:l=9;break e;case I:l=11;break e;case T:l=14;break e;case z:l=16,r=null;break e;case M:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Lu(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Au(e,t,n,r){return(e=Lu(7,e,r,t)).lanes=n,e}function Uu(e,t,n,r){return(e=Lu(23,e,r,t)).elementType=D,e.lanes=n,e}function Yu(e,t,n){return(e=Lu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Xu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ut(0),this.expirationTimes=Ut(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ut(0),this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,r){var a=t.current,o=ou(),l=iu(a);e:if(n){t:{if(Qe(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var c=n.type;if(da(c)){n=ha(n,c,u);break e}}n=u}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),lu(a,l,o),l}function Wu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function $u(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Hu(e,t){$u(e,t),(e=e.alternate)&&$u(e,t)}function Ku(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Xu(e,t,null!=n&&!0===n.hydrate),t=Lu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Qr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Gu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Wu(i);l.call(e)}}Bu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ku(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Wu(i);u.call(e)}}!function(e,t){var n=Sl;Sl&=-2,Sl|=8;try{e(t)}finally{0===(Sl=n)&&(Ul(),Xa())}}((function(){Bu(t,i,e,a)}))}return Wu(i)}Yl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ca.current)Ti=!0;else{if(0==(n&r)){switch(Ti=!1,t.tag){case 3:Vi(t),Xo();break;case 5:jo(t);break;case 1:da(t.type)&&va(t);break;case 4:Io(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Ha,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Hi(e,t,n):(ia(zo,1&zo.current),null!==(t=Ji(e,t,n))?t.sibling:null);ia(zo,1&zo.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return qi(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(zo,zo.current),r)break;return null;case 23:case 24:return t.lanes=0,Di(e,t,n)}return Ji(e,t,n)}Ti=0!=(16384&e.flags)}else Ti=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;va(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fo(t,r,l,e),a.updater=po,t.stateNode=a,a._reactInternals=t,go(t,r,e,n),t=Yi(null,t,r,!0,o,n)}else t.tag=0,zi(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Ru(e)?1:0;if(null!=e){if((e=e.$$typeof)===I)return 11;if(e===T)return 14}return 2}(a),e=$a(a,e),o){case 0:t=Ai(null,t,a,e,n);break e;case 1:t=Ui(null,t,a,e,n);break e;case 11:t=Mi(null,t,a,e,n);break e;case 14:t=Li(null,t,a,$a(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ai(e,t,r,a=t.elementType===r?a:$a(r,a),n);case 1:return r=t.type,a=t.pendingProps,Ui(e,t,r,a=t.elementType===r?a:$a(r,a),n);case 3:if(Vi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Xo(),t=Ji(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Ro=Xr(t.stateNode.containerInfo.firstChild),Lo=t,o=Do=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Bo.push(o);for(n=Eo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else zi(e,t,r,n),Xo();t=t.child}return t;case 5:return jo(t),null===e&&Uo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Ar(r,a)?l=null:null!==o&&Ar(r,o)&&(t.flags|=16),Fi(e,t),zi(e,t,l,n),t.child;case 6:return null===e&&Uo(t),null;case 13:return Hi(e,t,n);case 4:return Io(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=_o(t,null,r,n):zi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Mi(e,t,r,a=t.elementType===r?a:$a(r,a),n);case 7:return zi(e,t,t.pendingProps,n),t.child;case 8:case 12:return zi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(Ha,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=or(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!ca.current){t=Ji(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=oo(-1,n&-n)).tag=2,io(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),Za(u.return,n),c.lanes|=n;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}zi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,zi(e,t,r,n),t.child;case 14:return o=$a(a=t.type,t.pendingProps),Li(e,t,a,o=$a(a.type,o),r,n);case 15:return Ri(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:$a(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,va(t)):e=!1,eo(t,n),ho(t,r,a),go(t,r,a,n),Yi(null,t,r,!0,e,n);case 19:return qi(e,t,n);case 23:case 24:return Di(e,t,n)}throw Error(i(156,t.tag))},Ku.prototype.render=function(e){Bu(e,this._internalRoot,null,null)},Ku.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Bu(null,e,null,(function(){t[Qr]=null}))},Ze=function(e){13===e.tag&&(lu(e,4,ou()),Hu(e,4))},et=function(e){13===e.tag&&(lu(e,67108864,ou()),Hu(e,67108864))},tt=function(e){if(13===e.tag){var t=ou(),n=iu(e);lu(e,n,t),Hu(e,n)}},nt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(i(90));q(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Te=function(e,t){var n=Sl;Sl|=1;try{return e(t)}finally{0===(Sl=n)&&(Ul(),Xa())}},ze=function(e,t,n,r,a){var o=Sl;Sl|=4;try{return Ya(98,e.bind(null,t,n,r,a))}finally{0===(Sl=o)&&(Ul(),Xa())}},Me=function(){0==(49&Sl)&&(function(){if(null!==ql){var e=ql;ql=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,Fa())}))}Xa()}(),Cu())},Le=function(e,t){var n=Sl;Sl|=2;try{return e(t)}finally{0===(Sl=n)&&(Ul(),Xa())}};var qu={findFiberByHostInstance:qr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Ju={bundleType:qu.bundleType,version:qu.version,rendererPackageName:qu.rendererPackageName,rendererConfig:qu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Qe(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return qe(a),e;if(o===r)return qe(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:qu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Zu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Zu.isDisabled&&Zu.supportsFiber)try{ya=Zu.inject(Ju),ba=Zu}catch(he){}}t.render=function(e,t,n){if(!Qu(t))throw Error(i(200));return Gu(null,e,t,!1,n)}},3935:(e,t,n)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},2408:(e,t,n)=>{var r=n(7418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function v(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function g(){}function y(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=v.prototype;var b=y.prototype=new g;b.constructor=y,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var S=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+C(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(S,"$&/")+"/"),P(i,t,n,"",(function(e){return e}))):null!=i&&(x(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(l=e[c],c);u+=P(l,t,n,s,i)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=P(l=l.value,t,n,s=r+C(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function I(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function j(){var e=N.current;if(null===e)throw Error(p(321));return e}var T={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!_.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:I}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return j().useCallback(e,t)},t.useContext=function(e,t){return j().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return j().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return j().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return j().useLayoutEffect(e,t)},t.useMemo=function(e,t){return j().useMemo(e,t)},t.useReducer=function(e,t,n){return j().useReducer(e,t,n)},t.useRef=function(e){return j().useRef(e)},t.useState=function(e){return j().useState(e)},t.version="17.0.1"},7294:(e,t,n)=>{e.exports=n(2408)},36:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AsyncContract=void 0;var r=n(888);t.AsyncContract=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e.length-1,a=e.slice(0,n),o=e[n];return{enforce:function(e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];if(t.length<a.length)throw new r.ValidationError("Expected "+a.length+" arguments but only received "+t.length);for(var i=0;i<a.length;i++)a[i].check(t[i]);var l=e.apply(void 0,t);if(!(l instanceof Promise))throw new r.ValidationError("Expected function to return a promise, but instead got "+l);return l.then(o.check)}}}}},361:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Contract=void 0;var r=n(888);t.Contract=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e.length-1,a=e.slice(0,n),o=e[n];return{enforce:function(e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];if(t.length<a.length)throw new r.ValidationError("Expected "+a.length+" arguments but only received "+t.length);for(var i=0;i<a.length;i++)a[i].check(t[i]);return o.check(e.apply(void 0,t))}}}}},6316:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checked=t.check=void 0;var r=n(888),a=new WeakMap;function o(e,t,n){var r=a.get(e),o=r&&r.get(t);if(o)return o;for(var i=[],l=0;l<n;l++)i.push(l);return i}t.check=function(e,t,n){var r=a.get(e)||new Map;a.set(e,r);var o=r.get(t)||[];r.set(t,o),o.push(n)},t.checked=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(0===e.length)throw new Error("No runtype provided to `@checked`. Please remove the decorator.");return function(t,n,a){var i=a.value,l=(t.name||t.constructor.name+".prototype")+("string"==typeof n?'["'+n+'"]':"["+String(n)+"]"),u=o(t,n,e.length);if(u.length!==e.length)throw new Error("Number of `@checked` runtypes and @check parameters not matched.");if(u.length>i.length)throw new Error("Number of `@checked` runtypes exceeds actual parameter length.");a.value=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return e.forEach((function(e,n){var a=u[n],o=e.validate(t[a]);if(!o.success)throw new r.ValidationError(l+", argument #"+a+": "+o.message,o.key)})),i.apply(this,t)}}}},888:function(e,t){var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.ValidationError=void 0;var a=function(e){function t(n,r){var a=e.call(this,r?n+" in "+r:n)||this;return a.key=r,a.name="ValidationError",Object.setPrototypeOf(a,t.prototype),a}return r(t,e),t}(Error);t.ValidationError=a},5529:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.Brand=t.InstanceOf=t.Null=t.Undefined=t.Literal=void 0,a(n(5550),t),a(n(7691),t),a(n(361),t),a(n(36),t),a(n(9074),t),a(n(888),t),a(n(2101),t),a(n(4913),t),a(n(6203),t);var o=n(7275);Object.defineProperty(t,"Literal",{enumerable:!0,get:function(){return o.Literal}}),Object.defineProperty(t,"Undefined",{enumerable:!0,get:function(){return o.Undefined}}),Object.defineProperty(t,"Null",{enumerable:!0,get:function(){return o.Null}}),a(n(4019),t),a(n(1257),t),a(n(4304),t),a(n(7333),t),a(n(6380),t),a(n(4226),t),a(n(9695),t),a(n(3132),t),a(n(3036),t),a(n(8239),t),a(n(559),t);var i=n(2867);Object.defineProperty(t,"InstanceOf",{enumerable:!0,get:function(){return i.InstanceOf}}),a(n(8802),t),a(n(8845),t);var l=n(6111);Object.defineProperty(t,"Brand",{enumerable:!0,get:function(){return l.Brand}}),a(n(6316),t)},9074:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.match=void 0,t.match=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return function(t){for(var n=0,r=e;n<r.length;n++){var a=r[n],o=a[0],i=a[1];if(o.guard(t))return i(t)}throw new Error("No alternatives were matched")}}},5550:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},7691:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},1732:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.innerValidate=t.create=void 0;var r=n(5529),a=n(8233),o=n(888);t.create=function(e,t){return t.check=n,t.assert=n,t._innerValidate=function(n,r){return r.has(n,t)?{success:!0,value:n}:e(n,r)},t.validate=function(e){return t._innerValidate(e,(n=new WeakMap,r=function(e,t){if(null!==e&&"object"==typeof e){var r=n.get(e);n.set(e,r?r.set(t,!0):(new WeakMap).set(t,!0))}},{has:function(e,t){var a=n.get(e),o=a&&a.get(t)||!1;return r(e,t),o}}));var n,r},t.guard=function(e){return t.validate(e).success},t.Or=function(e){return r.Union(t,e)},t.And=function(e){return r.Intersect(t,e)},t.withConstraint=function(e,n){return r.Constraint(t,e,n)},t.withGuard=function(e,n){return r.Constraint(t,e,n)},t.withBrand=function(e){return r.Brand(e,t)},t.reflect=t,t.toString=function(){return"Runtype<"+a.default(t)+">"},t;function n(e){var n=t.validate(e);if(n.success)return n.value;throw new o.ValidationError(n.message,n.key)}},t.innerValidate=function(e,t,n){return e._innerValidate(t,n)}},8233:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){return function(a){var o=function(t){return e?"("+t+")":t};if(t.has(a))return o("CIRCULAR "+a.tag);t.add(a);try{switch(a.tag){case"unknown":case"never":case"void":case"boolean":case"number":case"string":case"symbol":case"function":return a.tag;case"literal":var i=a.value;return"string"==typeof i?'"'+i+'"':String(i);case"array":return""+r(a)+n(!0,t)(a.element)+"[]";case"dictionary":return"{ [_: "+a.key+"]: "+n(!1,t)(a.value)+" }";case"record":var l=Object.keys(a.fields);return l.length?"{ "+l.map((function(e){return""+r(a)+e+(a.isPartial?"?":"")+": "+n(!1,t)(a.fields[e])+";"})).join(" ")+" }":"{}";case"tuple":return"["+a.components.map(n(!1,t)).join(", ")+"]";case"union":return o(""+a.alternatives.map(n(!0,t)).join(" | "));case"intersect":return o(""+a.intersectees.map(n(!0,t)).join(" & "));case"constraint":return a.name||n(e,t)(a.underlying);case"instanceof":return"InstanceOf<"+a.ctor.name+">";case"brand":return n(e,t)(a.entity)}}finally{t.delete(a)}throw Error("impossible")}};function r(e){return e.isReadonly?"readonly ":""}t.default=n(!1,new Set)},6380:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Array=void 0;var r=n(1732);function a(e,t){return(n=r.create((function(t,n){if(!Array.isArray(t))return{success:!1,message:"Expected array, but was "+(null===t?t:typeof t)};for(var a=0,o=t;a<o.length;a++){var i=o[a],l=r.innerValidate(e,i,n);if(!l.success)return{success:!1,message:l.message,key:l.key?"["+t.indexOf(i)+"]."+l.key:"["+t.indexOf(i)+"]"}}return{success:!0,value:t}}),{tag:"array",isReadonly:t,element:e})).asReadonly=function(){return a(n.element,!0)},n;var n}t.Array=function(e){return a(e,!1)}},4019:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Boolean=void 0;var r=n(1732);t.Boolean=r.create((function(e){return"boolean"==typeof e?{success:!0,value:e}:{success:!1,message:"Expected boolean, but was "+(null===e?e:typeof e)}}),{tag:"boolean"})},6111:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Brand=void 0;var r=n(1732);t.Brand=function(e,t){return r.create((function(e){var n=t.validate(e);return n.success?{success:!0,value:n.value}:n}),{tag:"brand",brand:e,entity:t})}},8845:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Guard=t.Constraint=void 0;var r=n(1732),a=n(4304),o=n(2101);t.Constraint=function(e,t,n){return r.create((function(r){var o=n&&n.name,i=e.validate(r);if(!i.success)return i;var l=t(i.value);return a.String.guard(l)?{success:!1,message:l}:l?{success:!0,value:i.value}:{success:!1,message:"Failed "+(o||"constraint")+" check"}}),{tag:"constraint",underlying:e,constraint:t,name:n&&n.name,args:n&&n.args})},t.Guard=function(e,t){return o.Unknown.withGuard(e,t)}},3132:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Dictionary=void 0;var r=n(1732),a=n(8233);t.Dictionary=function(e,t){return void 0===t&&(t="string"),r.create((function(n,o){if(null==n){var i=r.create(n,{tag:"dictionary",key:t,value:e});return{success:!1,message:"Expected "+a.default(i)+", but was "+n}}if("object"!=typeof n)return i=r.create(n,{tag:"dictionary",key:t,value:e}),{success:!1,message:"Expected "+a.default(i.reflect)+", but was "+typeof n};if(Object.getPrototypeOf(n)!==Object.prototype){if(!Array.isArray(n))return i=r.create(n,{tag:"dictionary",key:t,value:e}),{success:!1,message:"Expected "+a.default(i.reflect)+", but was "+Object.getPrototypeOf(n)};if("string"===t)return{success:!1,message:"Expected dictionary, but was array"}}for(var l in n){if("number"===t&&isNaN(+l))return{success:!1,message:"Expected dictionary key to be a number, but was string"};var u=r.innerValidate(e,n[l],o);if(!u.success)return{success:!1,message:u.message,key:u.key?l+"."+u.key:l}}return{success:!0,value:n}}),{tag:"dictionary",key:t,value:e})}},559:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Function=void 0;var r=n(1732);t.Function=r.create((function(e){return"function"==typeof e?{success:!0,value:e}:{success:!1,message:"Expected function, but was "+(null===e?e:typeof e)}}),{tag:"function"})},2867:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstanceOf=void 0;var r=n(1732);t.InstanceOf=function(e){return r.create((function(t){return t instanceof e?{success:!0,value:t}:{success:!1,message:"Expected "+e.name+", but was "+(null===t?t:typeof t)}}),{tag:"instanceof",ctor:e})}},8239:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Intersect=void 0;var r=n(1732);t.Intersect=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return r.create((function(t,n){for(var a=0,o=e;a<o.length;a++){var i=o[a],l=r.innerValidate(i,t,n);if(!l.success)return l}return{success:!0,value:t}}),{tag:"intersect",intersectees:e})}},8802:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Lazy=void 0;var r=n(1732);t.Lazy=function(e){var t,n={get tag(){return a().tag}};function a(){if(!t)for(var r in t=e())"tag"!==r&&(n[r]=t[r]);return t}return r.create((function(e){return a().validate(e)}),n)}},7275:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Null=t.Undefined=t.Literal=void 0;var r=n(1732);function a(e){return Array.isArray(e)?String(e.map(String)):String(e)}function o(e){return r.create((function(t){return t===e?{success:!0,value:t}:{success:!1,message:"Expected literal '"+a(e)+"', but was '"+a(t)+"'"}}),{tag:"literal",value:e})}t.Literal=o,t.Undefined=o(void 0),t.Null=o(null)},4913:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Never=void 0;var r=n(1732);t.Never=r.create((function(e){return{success:!1,message:"Expected nothing, but was "+(null===e?e:typeof e)}}),{tag:"never"})},1257:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Number=void 0;var r=n(1732);t.Number=r.create((function(e){return"number"==typeof e?{success:!0,value:e}:{success:!1,message:"Expected number, but was "+(null===e?e:typeof e)}}),{tag:"number"})},9695:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Partial=t.Record=t.InternalRecord=void 0;var r=n(1732),a=n(5611),o=n(8233);function i(e,t,n){return(l=r.create((function(n,i){if(null==n){var l=r.create((function(e){return{success:!0,value:e}}),{tag:"record",fields:e});return{success:!1,message:"Expected "+o.default(l)+", but was "+n}}for(var u in e)if(!t||a.hasKey(u,n)&&void 0!==n[u]){var c=t||a.hasKey(u,n)?n[u]:void 0,s=r.innerValidate(e[u],c,i);if(!s.success)return{success:!1,message:s.message,key:s.key?u+"."+s.key:u}}return{success:!0,value:n}}),{tag:"record",isPartial:t,isReadonly:n,fields:e})).asPartial=function(){return i(l.fields,!0,l.isReadonly)},l.asReadonly=function(){return i(l.fields,l.isPartial,!0)},l;var l}t.InternalRecord=i,t.Record=function(e){return i(e,!1,!1)},t.Partial=function(e){return i(e,!0,!1)}},4304:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.String=void 0;var r=n(1732);t.String=r.create((function(e){return"string"==typeof e?{success:!0,value:e}:{success:!1,message:"Expected string, but was "+(null===e?e:typeof e)}}),{tag:"string"})},7333:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Symbol=void 0;var r=n(1732).create((function(e){return"symbol"==typeof e?{success:!0,value:e}:{success:!1,message:"Expected symbol, but was "+(null===e?e:typeof e)}}),{tag:"symbol"});t.Symbol=r},4226:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Tuple=void 0;var r=n(1732),a=n(6380),o=n(2101);t.Tuple=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return r.create((function(t,n){var i=r.innerValidate(a.Array(o.Unknown),t,n);if(!i.success)return{success:!1,message:"Expected tuple to be an array: "+i.message,key:i.key};if(i.value.length!==e.length)return{success:!1,message:"Expected an array of length "+e.length+", but was "+i.value.length};for(var l=0;l<e.length;l++){var u=r.innerValidate(e[l],i.value[l],n);if(!u.success)return{success:!1,message:u.message,key:u.key?"["+l+"]."+u.key:"["+l+"]"}}return{success:!0,value:t}}),{tag:"tuple",components:e})}},3036:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Union=void 0;var r=n(1732),a=n(8233),o=n(5611);t.Union=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return function(n){for(var r=0;r<e.length;r++)if(e[r].guard(n))return t[r](n)}};return r.create((function(t,n){for(var i={},l=0,u=e;l<u.length;l++)if("record"===(p=u[l]).reflect.tag){var c=function(e){var t=p.reflect.fields[e];"literal"===t.tag&&(i[e]?i[e].every((function(e){return e!==t.value}))&&i[e].push(t.value):i[e]=[t.value])};for(var s in p.reflect.fields)c(s)}for(var s in i)if(i[s].length===e.length)for(var f=0,d=e;f<d.length;f++){var p;if("record"===(p=d[f]).reflect.tag){var m=p.reflect.fields[s];if("literal"===m.tag&&o.hasKey(s,t)&&t[s]===m.value)return r.innerValidate(p,t,n)}}for(var h=0,v=e;h<v.length;h++){var g=v[h];if(r.innerValidate(g,t,n).success)return{success:!0,value:t}}var y=r.create(t,{tag:"union",alternatives:e});return{success:!1,message:"Expected "+a.default(y)+", but was "+(null===t?t:typeof t)}}),{tag:"union",alternatives:e,match:n})}},2101:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Unknown=void 0;var r=n(1732);t.Unknown=r.create((function(e){return{success:!0,value:e}}),{tag:"unknown"})},6203:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Void=void 0;var r=n(2101);t.Void=r.Unknown},5611:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.hasKey=void 0,t.hasKey=function(e,t){return"object"==typeof t&&e in t}},53:(e,t)=>{var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,v=null,g=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+y;try{v(!0,e)?k.postMessage(null):(h=!1,v=null)}catch(e){throw k.postMessage(null),e}}else h=!1},n=function(e){v=e,h||(h=!0,k.postMessage(null))},r=function(e,n){g=d((function(){e(t.unstable_now())}),n)},a=function(){p(g),g=-1}}function _(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<S(a,t)))break e;e[r]=t,e[n]=a,n=r}}function E(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>S(i,n))void 0!==u&&0>S(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>S(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function S(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],P=[],O=1,I=null,N=3,j=!1,T=!1,z=!1;function M(e){for(var t=E(P);null!==t;){if(null===t.callback)x(P);else{if(!(t.startTime<=e))break;x(P),t.sortIndex=t.expirationTime,_(C,t)}t=E(P)}}function L(e){if(z=!1,M(e),!T)if(null!==E(C))T=!0,n(R);else{var t=E(P);null!==t&&r(L,t.startTime-e)}}function R(e,n){T=!1,z&&(z=!1,a()),j=!0;var o=N;try{for(M(n),I=E(C);null!==I&&(!(I.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=I.callback;if("function"==typeof i){I.callback=null,N=I.priorityLevel;var l=i(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?I.callback=l:I===E(C)&&x(C),M(n)}else x(C);I=E(C)}if(null!==I)var u=!0;else{var c=E(P);null!==c&&r(L,c.startTime-n),u=!1}return u}finally{I=null,N=o,j=!1}}var D=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){T||j||(T=!0,n(R))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return E(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,o,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,_(P,e),null===E(C)&&e===E(P)&&(z?a():z=!0,r(L,i-l))):(e.sortIndex=u,_(C,e),T||j||(T=!0,n(R))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},3840:(e,t,n)=>{e.exports=n(53)}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={};n.r(e),n.d(e,{appendVertexToCurrentChain:()=>Ye,createGeometry:()=>Ve,createObject:()=>Se,createSprite:()=>Te,deleteSelectedObjects:()=>Ce,duplicateSelectedSprite:()=>Re,editChain:()=>Fe,editGeometryName:()=>Xe,editObject:()=>Oe,editSprite:()=>ze,grabSprite:()=>Je,loadScene:()=>et,lowerSelectedObject:()=>Ne,popSceneFromRedoStack:()=>qe,popSceneFromUndoStack:()=>Ge,prependVertexToCurrentChain:()=>Ue,pushSceneToUndoStack:()=>Qe,raiseSelectedObject:()=>Ie,removeSelectedGeometry:()=>Be,removeSelectedObject:()=>je,removeSelectedSprite:()=>Le,scrollViewport:()=>$e,selectGeometry:()=>Ae,selectObject:()=>Pe,selectSprite:()=>Me,setCanvasRect:()=>Ke,stopGrabbing:()=>Ze,toggleGridSnapping:()=>tt,zoomViewport:()=>He});var t=n(7294),r=n(3935),a=function(){return(a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function o(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i}function i(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(o(arguments[t]));return e}function l(e){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return t.useMemo((function(){return e.apply(void 0,i(n))}),n)}}function u(e){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return t.useCallback(e.apply(void 0,i(n)),n)}}function c(e){return new s(e)}Object.create,Object.create;var s=function(e){var n=this;this.ctr=e,this.provide=l((function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return new((e=n.ctr).bind.apply(e,i([void 0],t)))})),this.context=t.createContext(void 0),this.injector=function(e){return{factory:function(){return n.provide.apply(n,i(e()))},provider:n.context.Provider}},this.get=function(){return t.useContext(n.context)}};function f(e){if(0===e.injectors.length)return t.createElement(t.Fragment,null,e.children);var n=e.injectors[0];return t.createElement(t.Fragment,null,t.createElement(n.provider,{value:n.factory()},t.createElement(f,{injectors:e.injectors.slice(1)},e.children)))}var d=c(function(){function e(e,t){this.config=e,this.displayService=t}return e.prototype.snapVertexToGrid=function(e){if(!1===this.config.enabled)return e;var t=this.displayService.zoomIndependentLength(20),n=a({},e),r=this.snapDiff(e.x,this.config.stepX,this.config.offsetX,t),o=this.snapDiff(e.y,this.config.stepY,this.config.offsetY,t);return Math.abs(r)<t&&(n.x-=r),Math.abs(o)<t&&(n.y-=o),n},e.prototype.snapRectToGrid=function(e){if(!1===this.config.enabled)return e;var t=this.displayService.zoomIndependentLength(20),n=a({},e),r=this.snapDiff(e.left,this.config.stepX,this.config.offsetX,t),o=this.snapDiff(e.top,this.config.stepY,this.config.offsetY,t),i=this.snapDiff(e.right,this.config.stepX,this.config.offsetX,t),l=this.snapDiff(e.bottom,this.config.stepY,this.config.offsetY,t),u=Math.abs(r)<Math.abs(i)?r:i,c=Math.abs(o)<Math.abs(l)?o:l;return Math.abs(u)<t&&(n.left-=u,n.right-=u),Math.abs(c)<t&&(n.top-=c,n.bottom-=c),n},e.prototype.snapDiff=function(e,t,n,r){return e-n<0?(e-n-r)%t+r:(e-n+r)%t-r},e}()),p={undoStack:null,redoStack:null,scene:{objects:[],selection:null},viewport:{centerX:0,centerY:0,zoomFactor:50},canvasRect:{height:100,width:100,x:0,y:0},gridConfig:{enabled:!0,offsetX:0,offsetY:0,stepX:1,stepY:1},grabbedThing:null},m=t.createContext({state:p,dispatch:function(e){console.error("App context is not set!")}}),h=n(5529),v=h.Record({x:h.Number,y:h.Number,sX:h.Number,sY:h.Number,a:h.Number}),g=h.Intersect(h.Record({name:h.String,src:h.String,transform:v}),h.Partial({background:h.Boolean})),y=h.Record({x:h.Number,y:h.Number}),b=h.Record({name:h.String,vertices:h.Array(y)}),w=h.Record({sprites:h.Array(g),geometries:h.Array(b),name:h.String,transform:v}),k=h.Record({version:h.Literal(2),objects:h.Array(w)}),_=h.Union(k);function E(e){var t=0,n=0,r=0,a=0;return 0===e.sprites.length?{left:-.5,top:-.5,right:.5,bottom:.5}:(e.sprites.forEach((function(e){var o=e.properties.transform;o.x-o.scaleX/2<t&&(t=o.x-o.scaleX/2),o.y-o.scaleY/2<n&&(n=o.y-o.scaleY/2),o.x+o.scaleX/2>r&&(r=o.x+o.scaleX/2),o.y+o.scaleY/2>a&&(a=o.y+o.scaleY/2)})),e.geometries.forEach((function(e){e.vertices.forEach((function(e){e.x<t&&(t=e.x),e.x>r&&(r=e.x),e.y<n&&(n=e.y),e.y>a&&(a=e.y)}))})),{left:t,top:n,right:r,bottom:a})}var x,S=(x=0,function(){return x++}),C=c(function(){function e(){var e=this;this.hydrateObject=function(t){var n=String(S()),r=t.sprites.map((function(t){return e.hydrateSprite(n,t)})),a={geometries:t.geometries.map((function(t){return e.hydrateGeometry(n,t)})),guid:n,properties:{name:t.name,transform:e.hydrateTransform(t.transform)},sprites:r,boundingBox:{top:0,right:0,bottom:0,left:0}};return a.boundingBox=E(a),a}}return e.prototype.deserialize=function(e){var t=JSON.parse(e),n=_.validate(t);if(!n.success)throw new Error(n.message);return this.fromDTO(n.value)},e.prototype.fromDTO=function(e){return this.fromV2(e)},e.prototype.fromV2=function(e){return{objects:e.objects.map(this.hydrateObject)}},e.prototype.hydrateTransform=function(e){return{rotation:e.a,x:e.x,y:e.y,scaleX:e.sX,scaleY:e.sY}},e.prototype.hydrateSprite=function(e,t){var n,r=String(S());return{ownerId:e,properties:{name:t.name,src:t.src.replace(/^\//,"./"),transform:this.hydrateTransform(t.transform),background:null!==(n=t.background)&&void 0!==n&&n},spriteId:r}},e.prototype.hydrateGeometry=function(e,t){return{type:"chain",geometryId:String(S()),ownerId:e,name:t.name,vertices:t.vertices}},e}()),P=c(function(){function e(e,t){this.viewport=e,this.canvas=t}return e.prototype.screenCoordsToWorldCoords=function(e){return{x:(e.x-this.canvas.x-this.canvas.width/2)/this.viewport.zoomFactor+this.viewport.centerX,y:(e.y-this.canvas.y-this.canvas.height/2)/this.viewport.zoomFactor+this.viewport.centerY}},e.prototype.zoomIndependentLength=function(e){return e/this.viewport.zoomFactor},e.prototype.isInsideCanvas=function(e){return e.x<this.canvas.x+this.canvas.width&&e.x>this.canvas.x&&e.y<this.canvas.y+this.canvas.height&&e.y>this.canvas.y},e}()),O=c(function(){function e(){}return e.prototype.download=function(e,t){var n=document.createElement("a");n.style.display="none",n.href=URL.createObjectURL(e),document.body.append(n),n.download=t,n.click(),document.body.removeChild(n)},e}());function I(e,t){var n=function(t){return{data:t,type:e}};return n.reduce=t,n}function N(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function j(e){return!!e&&!!e[ve]}function T(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);return!t||t===Object.prototype}(e)||Array.isArray(e)||!!e[he]||!!e.constructor[he]||D(e)||F(e))}function z(e,t,n){void 0===n&&(n=!1),0===M(e)?(n?Object.keys:ge)(e).forEach((function(r){n&&"symbol"==typeof r||t(r,e[r],e)})):e.forEach((function(n,r){return t(r,n,e)}))}function M(e){var t=e[ve];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:D(e)?2:F(e)?3:0}function L(e,t){return 2===M(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function R(e,t,n){var r=M(e);2===r?e.set(t,n):3===r?(e.delete(t),e.add(n)):e[t]=n}function D(e){return fe&&e instanceof Map}function F(e){return de&&e instanceof Set}function A(e){return e.o||e.t}function U(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=ye(e);delete t[ve];for(var n=ge(t),r=0;r<n.length;r++){var a=n[r],o=t[a];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[a]={configurable:!0,writable:!0,enumerable:o.enumerable,value:e[a]})}return Object.create(Object.getPrototypeOf(e),t)}function Y(e,t){return void 0===t&&(t=!1),X(e)||j(e)||!T(e)||(M(e)>1&&(e.set=e.add=e.clear=e.delete=V),Object.freeze(e),t&&z(e,(function(e,t){return Y(t,!0)}),!0)),e}function V(){N(2)}function X(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function B(e){var t=be[e];return t||N(18,e),t}function W(){return ce}function $(e,t){t&&(B("Patches"),e.u=[],e.s=[],e.v=t)}function H(e){K(e),e.p.forEach(G),e.p=null}function K(e){e===ce&&(ce=e.l)}function Q(e){return ce={p:[],l:ce,h:e,m:!0,_:0}}function G(e){var t=e[ve];0===t.i||1===t.i?t.j():t.g=!0}function q(e,t){t._=t.p.length;var n=t.p[0],r=void 0!==e&&e!==n;return t.h.O||B("ES5").S(t,e,r),r?(n[ve].P&&(H(t),N(4)),T(e)&&(e=J(t,e),t.l||ee(t,e)),t.u&&B("Patches").M(n[ve],e,t.u,t.s)):e=J(t,n,[]),H(t),t.u&&t.v(t.u,t.s),e!==me?e:void 0}function J(e,t,n){if(X(t))return t;var r=t[ve];if(!r)return z(t,(function(a,o){return Z(e,r,t,a,o,n)}),!0),t;if(r.A!==e)return t;if(!r.P)return ee(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var a=4===r.i||5===r.i?r.o=U(r.k):r.o;z(3===r.i?new Set(a):a,(function(t,o){return Z(e,r,a,t,o,n)})),ee(e,a,!1),n&&e.u&&B("Patches").R(r,n,e.u,e.s)}return r.o}function Z(e,t,n,r,a,o){if(j(a)){var i=J(e,a,o&&t&&3!==t.i&&!L(t.D,r)?o.concat(r):void 0);if(R(n,r,i),!j(i))return;e.m=!1}if(T(a)&&!X(a)){if(!e.h.N&&e._<1)return;J(e,a),t&&t.A.l||ee(e,a)}}function ee(e,t,n){void 0===n&&(n=!1),e.h.N&&e.m&&Y(t,n)}function te(e,t){var n=e[ve];return(n?A(n):e)[t]}function ne(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var r=Object.getOwnPropertyDescriptor(n,t);if(r)return r;n=Object.getPrototypeOf(n)}}function re(e){e.P||(e.P=!0,e.l&&re(e.l))}function ae(e){e.o||(e.o=U(e.t))}function oe(e,t,n){var r=D(t)?B("MapSet").T(t,n):F(t)?B("MapSet").F(t,n):e.O?function(e,t){var n=Array.isArray(e),r={i:n?1:0,A:t?t.A:W(),P:!1,I:!1,D:{},l:t,t:e,k:null,o:null,j:null,C:!1},a=r,o=we;n&&(a=[r],o=ke);var i=Proxy.revocable(a,o),l=i.revoke,u=i.proxy;return r.k=u,r.j=l,u}(t,n):B("ES5").J(t,n);return(n?n.A:W()).p.push(r),r}function ie(e){return j(e)||N(22,e),function e(t){if(!T(t))return t;var n,r=t[ve],a=M(t);if(r){if(!r.P&&(r.i<4||!B("ES5").K(r)))return r.t;r.I=!0,n=le(t,a),r.I=!1}else n=le(t,a);return z(n,(function(t,a){r&&function(e,t){return 2===M(e)?e.get(t):e[t]}(r.t,t)===a||R(n,t,e(a))})),3===a?new Set(n):n}(e)}function le(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return U(e)}var ue,ce,se="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),fe="undefined"!=typeof Map,de="undefined"!=typeof Set,pe="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,me=se?Symbol.for("immer-nothing"):((ue={})["immer-nothing"]=!0,ue),he=se?Symbol.for("immer-draftable"):"__$immer_draftable",ve=se?Symbol.for("immer-state"):"__$immer_state",ge=("undefined"!=typeof Symbol&&Symbol.iterator,"undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames),ye=Object.getOwnPropertyDescriptors||function(e){var t={};return ge(e).forEach((function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)})),t},be={},we={get:function(e,t){if(t===ve)return e;var n=A(e);if(!L(n,t))return function(e,t,n){var r,a=ne(t,n);return a?"value"in a?a.value:null===(r=a.get)||void 0===r?void 0:r.call(e.k):void 0}(e,n,t);var r=n[t];return e.I||!T(r)?r:r===te(e.t,t)?(ae(e),e.o[t]=oe(e.A.h,r,e)):r},has:function(e,t){return t in A(e)},ownKeys:function(e){return Reflect.ownKeys(A(e))},set:function(e,t,n){var r=ne(A(e),t);if(null==r?void 0:r.set)return r.set.call(e.k,n),!0;if(!e.P){var a=te(A(e),t),o=null==a?void 0:a[ve];if(o&&o.t===n)return e.o[t]=n,e.D[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(n,a)&&(void 0!==n||L(e.t,t)))return!0;ae(e),re(e)}return e.o[t]===n&&"number"!=typeof n||(e.o[t]=n,e.D[t]=!0,!0)},deleteProperty:function(e,t){return void 0!==te(e.t,t)||t in e.t?(e.D[t]=!1,ae(e),re(e)):delete e.D[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var n=A(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty:function(){N(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){N(12)}},ke={};z(we,(function(e,t){ke[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),ke.deleteProperty=function(e,t){return we.deleteProperty.call(this,e[0],t)},ke.set=function(e,t,n){return we.set.call(this,e[0],t,n,e[0])};var _e=new(function(){function e(e){this.O=pe,this.N=!0,"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var t=e.prototype;return t.produce=function(e,t,n){if("function"==typeof e&&"function"!=typeof t){var r=t;t=e;var a=this;return function(e){var n=this;void 0===e&&(e=r);for(var o=arguments.length,i=Array(o>1?o-1:0),l=1;l<o;l++)i[l-1]=arguments[l];return a.produce(e,(function(e){var r;return(r=t).call.apply(r,[n,e].concat(i))}))}}var o;if("function"!=typeof t&&N(6),void 0!==n&&"function"!=typeof n&&N(7),T(e)){var i=Q(this),l=oe(this,e,void 0),u=!0;try{o=t(l),u=!1}finally{u?H(i):K(i)}return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(e){return $(i,n),q(e,i)}),(function(e){throw H(i),e})):($(i,n),q(o,i))}if(!e||"object"!=typeof e){if((o=t(e))===me)return;return void 0===o&&(o=e),this.N&&Y(o,!0),o}N(21,e)},t.produceWithPatches=function(e,t){var n,r,a=this;return"function"==typeof e?function(t){for(var n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return a.produceWithPatches(t,(function(t){return e.apply(void 0,[t].concat(r))}))}:[this.produce(e,t,(function(e,t){n=e,r=t})),n,r]},t.createDraft=function(e){T(e)||N(8),j(e)&&(e=ie(e));var t=Q(this),n=oe(this,e,void 0);return n[ve].C=!0,K(t),n},t.finishDraft=function(e,t){var n=(e&&e[ve]).A;return $(n,t),q(void 0,n)},t.setAutoFreeze=function(e){this.N=e},t.setUseProxies=function(e){e&&!pe&&N(20),this.O=e},t.applyPatches=function(e,t){var n;for(n=t.length-1;n>=0;n--){var r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}var a=B("Patches").$;return j(e)?a(e,t):this.produce(e,(function(e){return a(e,t.slice(n+1))}))},e}()),Ee=_e.produce;_e.produceWithPatches.bind(_e),_e.setAutoFreeze.bind(_e),_e.setUseProxies.bind(_e),_e.applyPatches.bind(_e),_e.createDraft.bind(_e),_e.finishDraft.bind(_e);const xe=Ee;var Se=I("createObject",(function(e,t){return xe(e,(function(e){e.scene.selection={type:"object",objectId:t.guid};var n=function(e){var t={guid:e,properties:{name:"unnamed",transform:{x:0,y:0,rotation:0,scaleX:1,scaleY:1}},boundingBox:{left:-.5,top:-.5,right:.5,bottom:.5},geometries:[],sprites:[]};return t.boundingBox=E(t),t}(t.guid);n.properties.name="New Object "+t.guid,t.properties&&(n.properties=a(a({},n.properties),t.properties)),e.scene.objects.push(n)}))})),Ce=I("deleteSelectedObjects",(function(e){return xe(e,(function(e){e.scene.objects=e.scene.objects.filter((function(t){var n;return(null===(n=e.scene.selection)||void 0===n?void 0:n.objectId)!==t.guid}))}))})),Pe=I("selectObject",(function(e,t){return xe(e,(function(e){null!=e.scene.objects.find((function(e){return e.guid===t.guid}))&&(e.scene.selection={type:"object",objectId:t.guid})}))})),Oe=I("editObject",(function(e,t){return xe(e,(function(e){var n=e.scene.objects.find((function(e){return e.guid===t.guid}));n&&(n.properties=a({},t.properties))}))})),Ie=I("raiseSelectedObject",(function(e){return xe(e,(function(t){var n=t.scene.objects.findIndex((function(t){var n;return t.guid===(null===(n=e.scene.selection)||void 0===n?void 0:n.objectId)}));n>0&&t.scene.objects.splice(n-1,2,t.scene.objects[n],t.scene.objects[n-1])}))})),Ne=I("lowerSelectedObject",(function(e){return xe(e,(function(t){var n=t.scene.objects.findIndex((function(t){var n;return t.guid===(null===(n=e.scene.selection)||void 0===n?void 0:n.objectId)}));n>=0&&n!==t.scene.objects.length-1&&t.scene.objects.splice(n,2,t.scene.objects[n+1],t.scene.objects[n])}))})),je=I("removeSelectedObject",(function(e){return xe(e,(function(t){var n=e.scene.selection;"object"===(null==n?void 0:n.type)&&(t.scene.objects=t.scene.objects.filter((function(e){return e.guid!==n.objectId})),t.scene.selection=null)}))})),Te=I("createSprite",(function(e,t){return xe(e,(function(e){var n=De(e,t.ownerId),r={ownerId:t.ownerId,spriteId:t.spriteId,properties:{src:"./static/tiles-pack-1/Tile (1).png",name:"unnamed",transform:{x:0,y:0,rotation:0,scaleX:1,scaleY:1},background:!1}};r.properties.name="New Sprite "+t.spriteId,n.sprites.push(r),e.scene.selection={type:"sprite",objectId:t.ownerId,spriteId:t.spriteId},n.boundingBox=E(n)}))})),ze=I("editSprite",(function(e,t){return xe(e,(function(e){var n=De(e,t.ownerId),r=n.sprites.find((function(e){return e.spriteId===t.spriteId}));r&&(r.properties=t.properties),n.boundingBox=E(n)}))})),Me=I("selectSprite",(function(e,t){return xe(e,(function(e){e.scene.selection={type:"sprite",objectId:t.ownerId,spriteId:t.spriteId}}))})),Le=I("removeSelectedSprite",(function(e){return xe(e,(function(t){var n=e.scene.selection;if("sprite"===(null==n?void 0:n.type)){var r=De(t,n.objectId);r.sprites=r.sprites.filter((function(e){return e.spriteId!==n.spriteId})),t.scene.selection={type:"object",objectId:n.objectId}}}))})),Re=I("duplicateSelectedSprite",(function(e,t){return xe(e,(function(n){var r=e.scene.selection;if("sprite"===(null==r?void 0:r.type)){var a=De(n,r.objectId),o=a.sprites.find((function(e){return e.spriteId===r.spriteId}));if(null!=o){var i=xe(o,(function(e){e.properties.name=function(e){var t=e.match(/^(.+)(\d+)$/);if(null==t)return e+" 1";var n=Number(t[2]);return t[1]+(n+1)}(o.properties.name),e.spriteId=t.newId,e.properties.transform.x+=.5,e.properties.transform.y+=.25}));a.sprites.push(i),n.scene.selection={type:"sprite",objectId:r.objectId,spriteId:t.newId}}}}))}));function De(e,t){var n=e.scene.objects.find((function(e){return e.guid===t}));if(null==n)throw new Error("No owner");return n}var Fe=I("editChain",(function(e,t){return xe(e,(function(e){var n=e.scene.objects.find((function(e){return e.guid===t.ownerId})),r=null==n?void 0:n.geometries.find((function(e){return e.geometryId===t.chainId}));null!=n&&null!=r&&(r.vertices=i(t.vertices),n.boundingBox=E(n))}))})),Ae=I("selectGeometry",(function(e,t){return xe(e,(function(e){e.scene.selection={type:"geometry",objectId:t.ownerId,geometryId:t.geometryId}}))})),Ue=I("prependVertexToCurrentChain",(function(e){return xe(e,(function(t){var n=e.scene.selection;if("geometry"===(null==n?void 0:n.type)){var r=t.scene.objects.find((function(e){return e.guid===n.objectId}));if(null!=r){var a=r.geometries.find((function(e){return e.geometryId===n.geometryId}));null==a||a.vertices.unshift({x:0,y:0}),r.boundingBox=E(r)}}}))})),Ye=I("appendVertexToCurrentChain",(function(e){return xe(e,(function(t){var n=e.scene.selection;if("geometry"===(null==n?void 0:n.type)){var r=t.scene.objects.find((function(e){return e.guid===n.objectId}));if(null!=r){var a=r.geometries.find((function(e){return e.geometryId===n.geometryId}));null==a||a.vertices.push({x:0,y:0}),r.boundingBox=E(r)}}}))})),Ve=I("createGeometry",(function(e,t){return xe(e,(function(e){var n,r=We(e,t.ownerId),a=(n=t.ownerId,{type:"chain",geometryId:t.geometryId,name:"New geometry",ownerId:n,vertices:[{x:0,y:0},{x:1,y:0}]});a.name="New Geometry "+t.geometryId,r.geometries.push(a),e.scene.selection={type:"geometry",objectId:t.ownerId,geometryId:t.geometryId},r.boundingBox=E(r)}))})),Xe=I("editGeometryName",(function(e,t){return xe(e,(function(e){var n=We(e,t.ownerId),r=n.geometries.find((function(e){return e.geometryId===t.geometryId}));r&&(r.name=t.name),n.boundingBox=E(n)}))})),Be=I("removeSelectedGeometry",(function(e){return xe(e,(function(t){var n=e.scene.selection;if("geometry"===(null==n?void 0:n.type)){var r=We(t,n.objectId);r.geometries=r.geometries.filter((function(e){return e.geometryId!==n.geometryId})),t.scene.selection={type:"object",objectId:n.objectId}}}))}));function We(e,t){var n=e.scene.objects.find((function(e){return e.guid===t}));if(null==n)throw new Error("No owner");return n}var $e=I("scrollViewport",(function(e,t){return xe(e,(function(e){e.viewport.centerX+=t.deltaX/e.viewport.zoomFactor,e.viewport.centerY+=t.deltaY/e.viewport.zoomFactor}))})),He=I("zoomViewport",(function(e,t){return xe(e,(function(e){e.viewport.zoomFactor+=e.viewport.zoomFactor*t.delta*.02}))})),Ke=I("setCanvasRect",(function(e,t){return xe(e,(function(e){e.canvasRect=t.canvasRect}))})),Qe=I("pushSceneToUndoStack",(function(e){return xe(e,(function(e){e.undoStack={scene:e.scene,next:e.undoStack},e.redoStack=null}))})),Ge=I("popSceneFromUndoStack",(function(e){return xe(e,(function(e){null!=e.undoStack&&(e.redoStack={scene:e.scene,next:e.redoStack},e.scene=e.undoStack.scene,e.undoStack=e.undoStack.next)}))})),qe=I("popSceneFromRedoStack",(function(e){return xe(e,(function(e){null!=e.redoStack&&(e.undoStack={scene:e.scene,next:e.undoStack},e.scene=e.redoStack.scene,e.redoStack=e.redoStack.next)}))})),Je=I("grabSprite",(function(e,t){return xe(e,(function(e){e.grabbedThing=a({},t)}))})),Ze=I("stopGrabbing",(function(e){return xe(e,(function(e){e.grabbedThing=null}))})),et=I("loadScene",(function(e,t){return a(a({},e),{viewport:p.viewport,undoStack:null,redoStack:null,scene:a(a({},t.scene),{selection:null})})})),tt=I("toggleGridSnapping",(function(e){return xe(e,(function(e){e.gridConfig.enabled=!e.gridConfig.enabled}))})),nt=c(function(){function e(e,t,n,r,o){var i=this;this.displayService=e,this.gridService=t,this.grabbedThing=n,this.scene=r,this.dispatch=o,this.onWorkbenchMouseMove=function(e){null!=i.grabbedThing&&i.updateGrab(a(a({},i.grabbedThing),{clientX:e.clientX,clientY:e.clientY}))},this.onWorkbenchMouseUp=function(e){var t,n;if(e.preventDefault(),i.dispatch(Ze()),i.displayService.isInsideCanvas({x:e.clientX,y:e.clientY})){var r=i.getPendingDropItem();if(null!=r){i.dispatch(Qe());var o=i.scene.objects.find((function(e){var t;return e.guid===(null===(t=i.scene.selection)||void 0===t?void 0:t.objectId)})),l=null==o?void 0:o.guid;null!=o&&null!=l||(l=String(S()),i.dispatch(Se({guid:l,properties:{transform:{rotation:0,scaleX:1,scaleY:1,x:r.worldX-.5,y:r.worldY-.5}}})));var u={ownerId:l,spriteId:String(S())};i.dispatch(Te(u)),i.dispatch(ze(a(a({},u),{properties:{background:!1,name:"my sprite",src:r.src,transform:{rotation:0,scaleX:r.width,scaleY:r.height,x:r.worldX-(null!==(t=null==o?void 0:o.properties.transform.x)&&void 0!==t?t:r.worldX-.5),y:r.worldY-(null!==(n=null==o?void 0:o.properties.transform.y)&&void 0!==n?n:r.worldY-.5)}}})))}}}}return e.prototype.updateGrab=function(e){this.dispatch(Je(e))},e.prototype.getPendingDropItem=function(){if(null==this.grabbedThing)return null;var e=this.displayService.screenCoordsToWorldCoords({x:this.grabbedThing.clientX,y:this.grabbedThing.clientY}),t=this.gridService.snapRectToGrid({left:e.x-this.grabbedThing.width/2,right:e.x+this.grabbedThing.width/2,top:e.y-this.grabbedThing.height/2,bottom:e.y+this.grabbedThing.height/2});return{src:this.grabbedThing.src,worldX:t.left+this.grabbedThing.width/2,worldY:t.top+this.grabbedThing.height/2,width:this.grabbedThing.width/256,height:this.grabbedThing.height/256}},e}()),rt=c(function(){function e(e,t){this.dispatch=e,this.persistenceService=t}return e.prototype.useKeyboardShortcuts=function(){var e=this;t.useEffect((function(){var t=function(t){switch(t.key){case"z":case"Z":(t.ctrlKey||t.metaKey)&&(t.shiftKey?e.dispatch(qe()):e.dispatch(Ge()));break;case"s":t.ctrlKey||t.metaKey?(t.preventDefault(),e.persistenceService.save()):(t.preventDefault(),e.dispatch(tt()));break;case"Delete":e.dispatch(je()),e.dispatch(Le()),e.dispatch(Be());break;case"d":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),e.dispatch(Qe()),e.dispatch(Re({newId:String(S())})));break;case"ArrowRight":e.dispatch($e({deltaX:30,deltaY:0}));break;case"ArrowLeft":e.dispatch($e({deltaX:-30,deltaY:0}));break;case"ArrowUp":e.dispatch($e({deltaX:0,deltaY:-30}));break;case"ArrowDown":e.dispatch($e({deltaX:0,deltaY:30}));break;case"-":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),t.stopImmediatePropagation(),e.dispatch(He({delta:-4})));break;case"+":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),t.stopImmediatePropagation(),e.dispatch(He({delta:4})))}console.log(t.key)};return window.addEventListener("keydown",t),function(){window.removeEventListener("keydown",t)}}),[this])},e}()),at=c((function(e,t,n,r,a){var o=this;this.scene=e,this.dispatch=t,this.serializerService=n,this.deserializerService=r,this.downloadService=a,this.save=function(){if(null==o.scene)throw new Error("No scene to save");var e=JSON.stringify(o.serializerService.toDTO(o.scene),null,4),t=new Blob([e],{type:"application/prs.portails-level+json"});o.downloadService.download(t,"level.json")},this.load=function(){return function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{u(r.next(e))}catch(e){o(e)}}function l(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}u((r=r.apply(e,t||[])).next())}))}(o,void 0,void 0,(function(){var e,t;return function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(n){switch(n.label){case 0:return[4,fetch("./static/level.json")];case 1:return[4,n.sent().text()];case 2:return e=n.sent(),t=this.deserializerService.deserialize(e),this.dispatch(et({scene:t})),[2]}}))}))}})),ot=c(function(){function e(){var e=this;this.serializeObject=function(t){return{name:t.properties.name,transform:e.serializeTransform(t.properties.transform),sprites:t.sprites.map(e.serializeSprite),geometries:t.geometries.map(e.serializeGeometry)}},this.serializeTransform=function(e){return{a:e.rotation,x:e.x,y:e.y,sX:e.scaleX,sY:e.scaleY}},this.serializeSprite=function(t){return{name:t.properties.name,src:t.properties.src,transform:e.serializeTransform(t.properties.transform),background:t.properties.background}},this.serializeGeometry=function(e){return{name:e.name,vertices:i(e.vertices)}}}return e.prototype.toDTO=function(e){return{objects:e.objects.map(this.serializeObject),version:2}},e}());function it(t,n){try{return e[n.type].reduce(t,n.data)}catch(e){console.error(e)}return t}function lt(e){var t=e.scene.selection;if("sprite"===(null==t?void 0:t.type)){var n=ut(e);return null!=n?n.sprites.find((function(e){return e.spriteId===t.spriteId})):void 0}}function ut(e){return e.scene.objects.find((function(t){var n;return t.guid===(null===(n=e.scene.selection)||void 0===n?void 0:n.objectId)}))}var ct=t.memo((function(e){var n,r=o(t.useState(e.value),2),i=r[0],l=r[1],u=!1,c=t.createRef(),s=null!==(n=e.type)&&void 0!==n?n:"text";t.useEffect((function(){l(e.value)}),[e.value]),t.useEffect((function(){null!=c.current&&!0===e.focus&&(c.current.focus(),c.current.setSelectionRange(0,1e3))}),[e.focus,c.current]);var f=2===e.height?"var(--color-bg-1)":"var(--color-bg-main)";return t.createElement("input",{type:s,id:e.id,className:"ui-text-input",style:a({backgroundColor:f,color:"var(--color-fg-main)",fontSize:"inherit",outline:"none",width:"100%"},e.style),ref:c,value:i,onBlur:function(){e.onBlur&&e.onBlur(),e.onChange&&!u?(e.onChange(i),l(e.value)):l(e.value)},onKeyDown:function(t){"Enter"===t.key?t.target.blur():"Escape"===t.key&&(l(e.value),u=!0,t.target.blur())},placeholder:e.placeholder,onChange:function(e){return l(e.target.value)}})}));function st(e){return t.createElement("div",{className:"editor-panel"},e.title?t.createElement("div",{className:"panel-title"},e.title):void 0,t.createElement("div",{className:"panel-content"},e.children))}function ft(e){var n=nt.get(),r=pt(e.src),a=dt(r,e.src,n);return t.createElement("img",{className:"tile-picker-tile",src:e.src,alt:"",onMouseDown:a})}var dt=u((function(e,t,n){return function(r){r.preventDefault(),n.updateGrab({type:"sprite",src:t,clientX:r.clientX,clientY:r.clientY,width:e.width,height:e.height})}})),pt=l((function(e){var t=new Image;return t.src=e,t})),mt={name:".",data:[{name:"static",data:[{name:"tile-pack-2",data:[{name:"background",data:["background.png","repeating_floor.png","repeating_floor_top_part.png"]},{name:"bg_overlay_props",data:["background_overlays_01.png","background_overlays_02.png","background_overlays_03.png","background_overlays_04.png","background_overlays_05.png","background_overlays_06.png","background_overlays_07.png","background_overlays_08.png","background_overlays_09.png","background_overlays_10.png","background_overlays_11.png","background_overlays_12.png","background_overlays_13.png","background_overlays_14.png","background_overlays_15.png","background_overlays_16.png","background_overlays_17.png","background_overlays_18.png","background_overlays_19.png","background_overlays_20.png","background_overlays_21.png","background_overlays_22.png","background_overlays_23.png","background_overlays_24.png","background_overlays_25.png","background_overlays_26.png","background_overlays_27.png","background_overlays_28.png","background_overlays_29.png","background_overlays_30.png","background_overlays_31.png","background_overlays_32.png","background_overlays_33.png","background_overlays_34.png","background_overlays_35.png","background_overlays_36.png","background_overlays_37.png",{name:"cheverons",data:["cheverons_bottom.png","cheverons_repeating.png","cheverons_top.png"]},{name:"fan",data:["fan.png","fan_unit.png"]},{name:"pipes",data:["bottom_left.png","bottom_right.png","horizontal.png","top_left.png","top_right.png","vert.png"]}]},{name:"overlay_props",data:[{name:"cheveron",data:["cheveron_bottom_end.png","cheveron_middle.png","cheveron_top_end.png"]},{name:"circuit_piece_overlay",data:["circuit_piece_overlay_01.png","circuit_piece_overlay_02.png","circuit_piece_overlay_03.png","circuit_piece_overlay_04.png","circuit_piece_overlay_05.png"]},{name:"fan_overlay",data:["fan.png","fan_unit.png"]},{name:"pipe_overlay",data:["pipe_bottom_left.png","pipe_bottom_right.png","pipe_horizontal.png","pipe_top_left.png","pipe_top_right.png","pipe_vert.png"]},"tile_set_overlay_01.png","tile_set_overlay_02.png","tile_set_overlay_03.png","tile_set_overlay_04.png","tile_set_overlay_05.png","tile_set_overlay_06.png","tile_set_overlay_07.png","tile_set_overlay_08.png","tile_set_overlay_09.png","tile_set_overlay_10.png","tile_set_overlay_11.png","tile_set_overlay_12.png","tile_set_overlay_13.png","tile_set_overlay_14.png","tile_set_overlay_15.png","tile_set_overlay_16.png","tile_set_overlay_17.png","tile_set_overlay_18.png","tile_set_overlay_19.png","tile_set_overlay_20.png","tile_set_overlay_21.png","tile_set_overlay_22.png","tile_set_overlay_23.png","tile_set_overlay_24.png","tile_set_overlay_25.png","tile_set_overlay_26.png","tile_set_overlay_27.png","tile_set_overlay_28.png","tile_set_overlay_29.png","tile_set_overlay_30.png","tile_set_overlay_31.png","tile_set_overlay_32.png","tile_set_overlay_33.png","tile_set_overlay_34.png","tile_set_overlay_35.png","tile_set_overlay_36.png","tile_set_overlay_37.png"]},{name:"tiles",data:["bottom.png","bottom_left.png","bottom_left_inner.png","bottom_right.png","bottom_right_inner.png","fill.png","horizontal_to_vertical_end_left.png","horizontal_to_vertical_end_right.png","horizontal_to_vertical_passthrough_left.png","horizontal_to_vertical_passthrough_right.png","island_center.png","island_left.png","island_right.png","left_edge.png","right_edge.png","shallow_slope_left_01.png","shallow_slope_left_02.png","shallow_slope_left_03.png","shallow_slope_right_01.png","shallow_slope_right_02.png","shallow_slope_right_03.png","single_pillar_bottom.png","single_pillar_bottom_join.png","single_pillar_left.png","single_pillar_left_end.png","single_pillar_left_join.png","single_pillar_right.png","single_pillar_right_end.png","single_pillar_right_join.png","single_pillar_top.png","single_pillar_top_join.png","single_pillar_vertical.png","steep_slope_left_01.png","steep_slope_left_02.png","steep_slope_right_01.png","steep_slope_right_02.png","top.png","top_left.png","top_left_inner.png","top_right.png","top_right_inner.png"]}]}]}]};function ht(e){return"object"==typeof e}function vt(e){return"string"==typeof e}function gt(){var e=o(t.useState("./static/tile-pack-2/tiles"),2),n=e[0],r=e[1],a=t.useContext(m),i=a.state,l=a.dispatch,u=function(e){return e.split("/").filter((function(e){return e})).reduce((function(e,t){return null==e?null:e.data.filter(ht).find((function(e){return e.name===t}))||null}),{name:"/",data:[mt]})}(n);return t.createElement(st,{title:"Assets"},t.createElement(ct,{value:n,onChange:r}),t.createElement("div",{className:"assets-folder",onClick:function(){return r(n.split("/").slice(0,-1).join("/"))}},"📁 .."),null==u?void 0:u.data.filter(ht).map((function(e){return t.createElement("div",{onClick:function(){return r(n+"/"+e.name)},className:"assets-folder",key:e.name},"📁 ",e.name)})),t.createElement("hr",null),null==u?void 0:u.data.filter(vt).map((function(e){return t.createElement(ft,{selection:i.scene.selection,dispatch:l,key:e,src:n+"/"+e})})))}function yt(e){var n,r,a=o(t.useState(!1),2),i=a[0],l=a[1],u=P.get(),c=u.zoomIndependentLength(i||(n=e.geometry,"geometry"===(null==(r=e.selection)?void 0:r.type)&&r.geometryId===n.geometryId)?3:1),s=u.zoomIndependentLength(10),f=e.geometry.vertices.map((function(e){return{x:e.x,y:e.y}}));return t.createElement("g",{onClick:function(){e.dispatch(Ae({ownerId:e.geometry.ownerId,geometryId:e.geometry.geometryId}))},onMouseEnter:function(){return l(!0)},onMouseLeave:function(){return l(!1)}},f.map((function(e,n){if(f.length!==n+1){var r=f[n+1];return t.createElement("g",{key:n},t.createElement("line",{x1:e.x,y1:e.y,x2:r.x,y2:r.y,stroke:"#e63904",strokeWidth:c}),t.createElement("line",{x1:e.x,y1:e.y,x2:r.x,y2:r.y,stroke:"transparent",strokeWidth:s}))}})))}function bt(e){var n=e.model.properties.transform;return t.createElement("g",{transform:"scale("+n.scaleY+" "+n.scaleY+") translate("+n.x+" "+n.y+")"},t.createElement("title",null,e.model.properties.name),e.model.geometries.map((function(n){return t.createElement(yt,{key:n.geometryId,selection:e.selection,geometry:n,parent:e.model,dispatch:e.dispatch})})))}function wt(){return t.useMemo((function(){var e,t=function(){throw new Error("not ready")},n=function(){throw new Error("not ready")};function r(r){var a,o=r.clientX,i=r.clientY,l=!1;function u(e){if(!l){var r=o-e.clientX,u=i-e.clientY;Math.sqrt(r*r+u*u)>3&&(a=t(e),l=!0)}l&&(a=n(e,a))}window.addEventListener("mousemove",u),window.addEventListener("mouseup",(function t(n){null==e||e(n,a),window.removeEventListener("mousemove",u),window.removeEventListener("mouseup",t)}))}return function(a){return t=a.start,n=a.dragging,e=a.commit,r}}),[])}function kt(e){var n=o(t.useState(!1),2),r=n[0],a=n[1],i=P.get(),l=d.get(),u=e.sprite.properties.transform.scaleX,c=e.sprite.properties.transform.scaleY,s=e.sprite.properties.transform.x-u/2,f=e.sprite.properties.transform.y-c/2,p=wt()(_t(e.parent,e.sprite,e.dispatch,i,l)),m=u<0,h=c<0,v=180*e.sprite.properties.transform.rotation/Math.PI;return t.createElement("g",{onMouseDown:function(t){e.dispatch(Me(e.sprite)),p(t)},onMouseEnter:function(){return a(!0)},onMouseLeave:function(){return a(!1)}},t.createElement("image",{preserveAspectRatio:"none",href:e.sprite.properties.src,width:Math.abs(u),height:Math.abs(c),transform:"translate("+s+", "+f+") translate("+u/2+", "+c/2+") rotate("+v+") translate("+-u/2+", "+-c/2+") scale("+(m?-1:1)+", "+(h?-1:1)+")"}),r?t.createElement("rect",{width:Math.abs(u),height:Math.abs(c),transform:"translate("+s+", "+f+") translate("+u/2+", "+c/2+") rotate("+v+") translate("+-u/2+", "+-c/2+") scale("+(m?-1:1)+", "+(h?-1:1)+")",fill:"#fff",fillOpacity:"0.1"}):void 0)}var _t=l((function(e,t,n,r,a){return{start:function(e){e.preventDefault(),e.stopPropagation(),n(Qe());var a=r.screenCoordsToWorldCoords({x:e.clientX,y:e.clientY});return{x:a.x-t.properties.transform.x,y:a.y-t.properties.transform.y}},dragging:function(e,o){var i=r.screenCoordsToWorldCoords({x:e.clientX,y:e.clientY});i.x-=o.x,i.y-=o.y;var l={bottom:i.y+t.properties.transform.scaleY/2,top:i.y-t.properties.transform.scaleY/2,left:i.x-t.properties.transform.scaleX/2,right:i.x+t.properties.transform.scaleX/2},u=a.snapRectToGrid(l),c={x:u.left+(u.right-u.left)/2,y:u.top+(u.bottom-u.top)/2};return n(ze(xe(t,(function(e){e.properties.transform.x=c.x,e.properties.transform.y=c.y})))),o}}})),Et=t.memo((function(e){var n=e.model.properties.transform;return t.createElement("g",{transform:"scale("+n.scaleY+" "+n.scaleY+") translate("+n.x+" "+n.y+")"},t.createElement("title",null,e.model.properties.name),e.model.sprites.filter((function(t){return t.properties.background===e.background})).map((function(n){return t.createElement(kt,{sprite:n,parent:e.model,key:n.spriteId,dispatch:e.dispatch})})))})),xt="#0099ff";function St(e){var n=e.chain.vertices[e.vertexIndex],r=d.get(),a=P.get(),o=a.zoomIndependentLength(5),l=a.zoomIndependentLength(1),u=wt()({start:function(t){var r=a.screenCoordsToWorldCoords({x:t.clientX,y:t.clientY});return e.dispatch(Qe()),{x:r.x-n.x,y:r.y-n.y}},dragging:function(t,n){var o=a.screenCoordsToWorldCoords({x:t.clientX,y:t.clientY});o.x-=n.x,o.y-=n.y;var l,u,c,s=r.snapRectToGrid({left:o.x,right:o.x,top:o.y,bottom:o.y});return e.dispatch(Fe({ownerId:e.chain.ownerId,chainId:e.chain.geometryId,vertices:(l=e.chain.vertices,u=e.vertexIndex,c={x:s.left,y:s.top},i(l.slice(0,u),[c],l.slice(u+1)))})),n}});return t.createElement("rect",{x:n.x-o,y:n.y-o,width:2*o,height:2*o,fill:"#0099ff",stroke:"white",strokeWidth:l,onMouseDown:u})}function Ct(e){var n,r=t.useContext(m).state,a=P.get().zoomIndependentLength(1),o=null===(n=r.scene.objects.find((function(t){return t.guid===e.geometry.ownerId})))||void 0===n?void 0:n.properties.transform;if(null==o)throw new Error("Orphan geometry");var i=e.geometry.vertices.map((function(e){return{x:e.x,y:e.y}}));return t.createElement("g",{transform:"scale("+o.scaleY+" "+o.scaleY+") translate("+o.x+" "+o.y+")"},i.map((function(n,r){return[t.createElement(St,{key:r+"-v",chain:e.geometry,vertexIndex:r,dispatch:e.dispatch}),0!=r?t.createElement("line",{key:r+"-l",x1:i[r-1].x,y1:i[r-1].y,x2:n.x,y2:n.y,strokeWidth:a,stroke:xt}):void 0]})))}function Pt(e){var n,r=d.get(),a=P.get(),i=o(t.useState(!1),2),l=i[0],u=i[1],c=e.model.boundingBox,s=e.model.properties.transform,f=(null===(n=e.selection)||void 0===n?void 0:n.objectId)===e.model.guid?"#09ff00":"#fff",p=a.zoomIndependentLength(12),m=a.zoomIndependentLength(l?2:1),h=a.zoomIndependentLength(8),v=a.zoomIndependentLength(14),g=wt()(Ot(e.model,e.dispatch,a,r));function y(e,n){return t.createElement(t.Fragment,null,t.createElement("rect",{width:c.right-c.left+2*v,height:c.bottom-c.top+2*v,x:c.left+s.x-v,y:c.top+s.y-v,strokeWidth:n,fillOpacity:"0",fill:"none",stroke:e}),t.createElement("line",{x1:s.x-p,y1:s.y,x2:s.x+p,y2:s.y,stroke:e,strokeWidth:n}),t.createElement("line",{x1:s.x,y1:s.y-p,x2:s.x,y2:s.y+p,stroke:e,strokeWidth:n}))}return t.createElement("g",{onMouseDown:function(t){g(t),e.dispatch(Pe(e.model))},onMouseEnter:function(){return u(!0)},onMouseLeave:function(){return u(!1)}},y(f,m),y("transparent",h),t.createElement("circle",{cx:s.x,cy:s.y,r:p/2,fill:"transparent"}))}var Ot=l((function(e,t,n,r){return{start:function(r){r.preventDefault(),r.stopPropagation();var a=n.screenCoordsToWorldCoords({x:r.clientX,y:r.clientY}),o={x:a.x-e.properties.transform.x,y:a.y-e.properties.transform.y};return t(Qe()),o},dragging:function(a,o){var i=n.screenCoordsToWorldCoords({x:a.clientX,y:a.clientY});i.x-=o.x,i.y-=o.y;var l=r.snapRectToGrid({left:i.x,right:i.x,top:i.y,bottom:i.y});return t(Oe(xe(e,(function(e){e.properties.transform.x=l.left,e.properties.transform.y=l.top})))),o}}})),It="undefined"!=typeof Float32Array?Float32Array:Array;function Nt(){var e=new It(9);return It!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function jt(){var e=new It(2);return It!=Float32Array&&(e[0]=0,e[1]=0),e}function Tt(e,t,n){return e[0]=t,e[1]=n,e}function zt(e){var n=P.get(),r=n.zoomIndependentLength(10),a=d.get(),o=Mt(e.direction),i=wt()(Lt(e.dispatch,a,n,e.sprite,o)),l=function(e){return(e.dY<0?"n":e.dY>0?"s":"")+(e.dX<0?"w":e.dX>0?"e":"")}({dX:e.sprite.properties.transform.scaleX<0?-o.dX:o.dX,dY:e.sprite.properties.transform.scaleY<0?-o.dY:o.dY});return t.createElement("rect",{onMouseDown:i,stroke:"white",strokeWidth:n.zoomIndependentLength(1),transform:"matrix("+e.transform[0]+", "+e.transform[1]+", "+e.transform[3]+", "+e.transform[4]+", "+e.transform[6]+", "+e.transform[7]+")",cursor:l+"-resize",fill:xt,x:e.x-r/2,y:e.y-r/2,width:r,height:r})}jt();var Mt=l((function(e){return{dX:e.includes("e")?1:e.includes("w")?-1:0,dY:e.includes("n")?-1:e.includes("s")?1:0}})),Lt=l((function(e,t,n,r,a){return{start:function(t){var a=n.screenCoordsToWorldCoords({x:t.clientX,y:t.clientY});return e(Qe()),{startOffset:a,startTransform:r.properties.transform}},dragging:function(o,i){o.preventDefault(),o.stopPropagation();var l=t.snapVertexToGrid(n.screenCoordsToWorldCoords({x:o.clientX,y:o.clientY}));return e(ze(xe(r,(function(e){var t=l.x-i.startOffset.x,n=l.y-i.startOffset.y;if(o.ctrlKey||o.metaKey){var r=e.properties.transform.scaleY/e.properties.transform.scaleX,u=a.dX>0?t:-t,c=a.dY>0?n:-n;u>c?(e.properties.transform.scaleX=i.startTransform.scaleX+u,e.properties.transform.x=i.startTransform.x+u*a.dX/2*Math.abs(a.dX),e.properties.transform.scaleY=(i.startTransform.scaleX+u)*r,e.properties.transform.y=i.startTransform.y+(i.startTransform.scaleY-(i.startTransform.scaleX+u)*r)/2*-a.dY):(e.properties.transform.scaleY=i.startTransform.scaleY+c,e.properties.transform.y=i.startTransform.y+c*a.dY/2*Math.abs(a.dY),e.properties.transform.scaleX=(i.startTransform.scaleY+c)/r,e.properties.transform.x=i.startTransform.x+(i.startTransform.scaleX-(i.startTransform.scaleY+c)/r)/2*-a.dX)}else e.properties.transform.scaleX=i.startTransform.scaleX+t*a.dX,e.properties.transform.x=i.startTransform.x+t/2*Math.abs(a.dX),e.properties.transform.scaleY=i.startTransform.scaleY+n*a.dY,e.properties.transform.y=i.startTransform.y+n/2*Math.abs(a.dY)})))),i}}}));function Rt(e){var n=P.get(),r=n.zoomIndependentLength(5),a=wt()(Dt(e.dispatch,n,e.sprite));return t.createElement("circle",{onMouseDown:a,stroke:"white",strokeWidth:n.zoomIndependentLength(1),transform:"matrix("+e.transform[0]+", "+e.transform[1]+", "+e.transform[3]+", "+e.transform[4]+", "+e.transform[6]+", "+e.transform[7]+")",cursor:"grab",fill:xt,cx:e.x,cy:e.y,r})}var Dt=l((function(e,t,n){return{start:function(r){var a=t.screenCoordsToWorldCoords({x:r.clientX,y:r.clientY});return e(Qe()),{startOffset:a,startTransform:n.properties.transform}},dragging:function(r,a){r.preventDefault(),r.stopPropagation();var o=t.screenCoordsToWorldCoords({x:r.clientX,y:r.clientY}),i=Math.atan2(a.startOffset.y-a.startTransform.y,a.startOffset.x-a.startTransform.x),l=Math.atan2(o.y-a.startTransform.y,o.x-a.startTransform.x);return e(ze(xe(n,(function(e){o.x,a.startOffset.x,o.y,a.startOffset.y,e.properties.transform.rotation=a.startTransform.rotation+l-i})))),a}}}));function Ft(e){var n,r=P.get(),a=t.useContext(m),o=a.state,i=a.dispatch,l=null===(n=o.scene.objects.find((function(t){return t.guid===e.sprite.ownerId})))||void 0===n?void 0:n.properties.transform;if(null==l)throw new Error("Orphan sprite");var u=l.scaleX*e.sprite.properties.transform.scaleX,c=l.scaleY*e.sprite.properties.transform.scaleY,s=l.x+e.sprite.properties.transform.x*l.scaleX-u/2,f=l.y+e.sprite.properties.transform.y*l.scaleY-c/2,d=u<0,p=c<0,h=180*e.sprite.properties.transform.rotation/Math.PI,v=r.zoomIndependentLength(1),g=r.zoomIndependentLength(20),y=At(l),b=At(e.sprite.properties.transform),w=function(e,t,n){var r=t[0],a=t[1],o=t[2],i=t[3],l=t[4],u=t[5],c=t[6],s=t[7],f=t[8],d=n[0],p=n[1],m=n[2],h=n[3],v=n[4],g=n[5],y=n[6],b=n[7],w=n[8];return e[0]=d*r+p*i+m*c,e[1]=d*a+p*l+m*s,e[2]=d*o+p*u+m*f,e[3]=h*r+v*i+g*c,e[4]=h*a+v*l+g*s,e[5]=h*o+v*u+g*f,e[6]=y*r+b*i+w*c,e[7]=y*a+b*l+w*s,e[8]=y*o+b*u+w*f,e}(Nt(),y,b),k="matrix("+w[0]+", "+w[1]+", "+w[3]+", "+w[4]+", "+w[6]+", "+w[7]+")";return t.createElement("g",null,t.createElement("rect",{width:Math.abs(u),height:Math.abs(c),transform:"translate("+s+", "+f+") translate("+u/2+", "+c/2+") rotate("+h+") translate("+-u/2+", "+-c/2+") scale("+(d?-1:1)+", "+(p?-1:1)+")",fill:"none",stroke:xt,strokeWidth:v}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"nw",x:-u/2,y:-c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"ne",x:u/2,y:-c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"se",x:u/2,y:c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"sw",x:-u/2,y:c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"n",x:0,y:-c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"e",x:u/2,y:0}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"s",x:0,y:c/2}),t.createElement(zt,{transform:w,dispatch:i,sprite:e.sprite,direction:"w",x:-u/2,y:0}),t.createElement("line",{transform:k,x1:0,y1:-c/2,x2:0,y2:-c/2-g,stroke:xt,strokeWidth:v}),t.createElement(Rt,{transform:w,dispatch:i,sprite:e.sprite,x:0,y:-c/2-g}))}var At=l((function(e){var t=Nt(),n=jt();return function(e,t,n){var r=t[0],a=t[1],o=t[2],i=t[3],l=t[4],u=t[5],c=t[6],s=t[7],f=t[8],d=n[0],p=n[1];e[0]=r,e[1]=a,e[2]=o,e[3]=i,e[4]=l,e[5]=u,e[6]=d*r+p*i+c,e[7]=d*a+p*l+s,e[8]=d*o+p*u+f}(t,t,Tt(n,e.x,e.y)),function(e,t,n){var r=t[0],a=t[1],o=t[2],i=t[3],l=t[4],u=t[5],c=t[6],s=t[7],f=t[8],d=Math.sin(n),p=Math.cos(n);e[0]=p*r+d*i,e[1]=p*a+d*l,e[2]=p*o+d*u,e[3]=p*i-d*r,e[4]=p*l-d*a,e[5]=p*u-d*o,e[6]=c,e[7]=s,e[8]=f}(t,t,e.rotation),function(e,t,n){var r=n[0],a=n[1];e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=a*t[3],e[4]=a*t[4],e[5]=a*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8]}(t,t,Tt(n,e.scaleX<0?-1:1,e.scaleY<0?-1:1)),t}));function Ut(){var e,n,r,a,i,l=t.useContext(m),u=l.state,c=l.dispatch,s=t.useRef(null),f=null===(e=s.current)||void 0===e?void 0:e.getBoundingClientRect(),d=Yt(u.viewport,f),p=Vt(null!==(n=null==f?void 0:f.x)&&void 0!==n?n:0,null!==(r=null==f?void 0:f.y)&&void 0!==r?r:0,null!==(a=null==f?void 0:f.width)&&void 0!==a?a:0,null!==(i=null==f?void 0:f.height)&&void 0!==i?i:0);t.useEffect((function(){c(Ke({canvasRect:p}))}),[p]);var h=o(t.useState(0),2),v=h[0],g=h[1],y=lt(u),b=function(e){var t=e.scene.selection;if("geometry"===(null==t?void 0:t.type)){var n=ut(e);return null!=n?n.geometries.find((function(e){return e.geometryId===t.geometryId})):void 0}}(u);t.useEffect((function(){var e=0;function t(){g(e++)}return window.addEventListener("resize",t),function(){window.removeEventListener("resize",t)}}),[]),t.useEffect((function(){var e;g(v-1),null===(e=s.current)||void 0===e||e.addEventListener("wheel",(function(e){e.shiftKey?c($e({deltaX:e.deltaY,deltaY:e.deltaX})):e.ctrlKey||e.metaKey?c(He({delta:-e.deltaY})):c($e(e))}))}),[s.current,c]);var w=nt.get().getPendingDropItem();return t.createElement("div",{ref:s,className:"canvas"},t.createElement("svg",{viewBox:d,className:"canvas-svg"},u.scene.objects.map((function(e){return t.createElement(Et,{background:!0,model:e,dispatch:c,key:e.guid})})),u.scene.objects.map((function(e){return t.createElement(Et,{background:!1,model:e,dispatch:c,key:e.guid})})),u.scene.objects.map((function(e){return t.createElement(bt,{selection:u.scene.selection,model:e,dispatch:c,key:e.guid})})),u.scene.objects.map((function(e){return t.createElement(Pt,{model:e,dispatch:c,selection:u.scene.selection,key:e.guid})})),null!=y?t.createElement(Ft,{sprite:y}):void 0,null!=b?t.createElement(Ct,{geometry:b,dispatch:c}):void 0,null!=w?t.createElement("image",{preserveAspectRatio:"none",href:w.src,width:w.width,height:w.height,x:w.worldX-w.width/2,y:w.worldY-w.height/2}):void 0))}var Yt=l((function(e,t){if(null==t)return"0 0 800 600";var n=t.width/e.zoomFactor,r=t.height/e.zoomFactor;return e.centerX-n/2+" "+(e.centerY-r/2)+" "+n+" "+r})),Vt=l((function(e,t,n,r){return{x:e,y:t,width:n,height:r}}));function Xt(e){return t.createElement("div",{className:"editor-dock"},e.children)}function Bt(e){return t.createElement("img",{className:"drag-image",src:e.grabbedThing.src,style:Wt(e.grabbedThing)})}var Wt=l((function(e){return{left:e.clientX-20+"px",top:e.clientY-20+"px",width:"40px",height:"40px"}}));function $t(e){return t.createElement(t.Fragment,null,e.isSelected?e.children:void 0)}function Ht(e){return null!=e}function Kt(e){var n,r,a,i=o(t.useState(1),2),l=i[0],u=i[1],c=null!==(n=e.selectedTab)&&void 0!==n?n:l,s=null!==(a=null===(r=t.Children.map(e.children,(function(e,n){if("object"==typeof e&&null!=e&&"props"in e&&(a=$t,e.type===a)){var r=c===n;return t.cloneElement(e,{isSelected:r})}var a})))||void 0===r?void 0:r.filter(Ht))&&void 0!==a?a:[];return t.createElement("div",{className:"tabs-container"},t.createElement("div",{className:"tabs-header"},s.map((function(n,r){return t.createElement("div",{key:r,onClick:(a=r,function(t){t.preventDefault(),u(a),e.onTabSelect&&e.onTabSelect(a)}),className:n.props.isSelected?"selected":""},n.props.title);var a}))),t.createElement("div",{className:"tabs-content"},s))}var Qt={lg:"20px",md:"16px",sm:"12px"},Gt=t.memo((function(e){return t.createElement("button",{onClick:e.onClick,title:e.tooltip,className:"ui-button "+(!0===e.active?"active":""),disabled:!0===e.disabled,style:qt(e.style,e.size||"md")},e.value)})),qt=l((function(e,t){return a({fontSize:Qt[t]},e)}));function Jt(e){return t.createElement("div",{className:"ui-list"},e.data.map((function(t){return e.renderItem(t)})))}function Zt(e){var n=o(t.useState(!1),2),r=n[0],a=n[1];t.useEffect((function(){!0===e.forceEditing&&a(!0)}),[e.forceEditing]);var i=en(a),l=tn(a),u=nn(i);return t.createElement(t.Fragment,null,r?t.createElement(ct,{height:e.height,value:e.value,onChange:e.onChange,onBlur:l,focus:!0}):t.createElement("div",{onKeyDown:u,tabIndex:0,onFocus:e.onFocus,className:"ui-editable-text-resting",onDoubleClick:i},e.value||t.createElement(t.Fragment,null," ")))}var en=u((function(e){return function(){return e(!0)}})),tn=u((function(e){return function(){return e(!1)}})),nn=u((function(e){return function(t){" "!==t.key&&"Enter"!==t.key||(t.preventDefault(),e())}}));function rn(e){var n,r=an(null!==(n=e.selected)&&void 0!==n&&n);return t.createElement("div",{className:r,onClick:e.onClick},e.children)}var an=l((function(e){return"ui-list-item "+(e?"selected":"")}));function on(e){var n=ln(e.dispatch,e.geometry),r=un(e.dispatch,e.geometry);return t.createElement(rn,{onClick:n,selected:e.selected},t.createElement(Zt,{forceEditing:!!e.fresh||void 0,value:e.geometry.name,onChange:r}))}var ln=u((function(e,t){return function(){return e(Ae(t))}})),un=u((function(e,t){return function(n){n!==t.name&&(e(Qe()),e(Xe(xe(t,(function(e){e.name=n})))))}}));function cn(){var e=o(t.useState(null),2),n=e[0],r=e[1];return t.useEffect((function(){r(null)}),[n,r]),[n,r]}function sn(){var e,n=t.useContext(m),r=n.dispatch,a=n.state,i=o(cn(),2),l=i[0],u=i[1],c=ut(a),s=fn(r,a.scene.selection,l);return t.createElement("div",{className:"properties-panel"},null==c?"Select an object to see its geometries.":t.createElement(t.Fragment,null,t.createElement("div",{className:"list-container"},t.createElement(Jt,{renderItem:s,data:c.geometries})),t.createElement("div",{className:"actions-container"},t.createElement(Gt,{onClick:function(){var e=String(S());u(e),r(Qe()),r(Ve({ownerId:null==c?void 0:c.guid,geometryId:e}))},value:"+",tooltip:"Add geometry"}),t.createElement(Gt,{disabled:"geometry"!==(null===(e=a.scene.selection)||void 0===e?void 0:e.type),onClick:function(){r(Qe()),r(Be())},value:"-",tooltip:"Remove geometry"}))))}var fn=u((function(e,n,r){return function(a){return t.createElement(on,{selected:"geometry"===(null==n?void 0:n.type)&&n.geometryId===a.geometryId,fresh:r===a.geometryId,dispatch:e,geometry:a,key:a.geometryId})}}));function dn(e){var n=pn(e.dispatch,e.sprite),r=mn(e.dispatch,e.sprite);return t.createElement(rn,{onClick:n,selected:e.selected},t.createElement("img",{className:"sprite-miniature",src:e.sprite.properties.src}),t.createElement(Zt,{onFocus:function(){return e.dispatch(Me(e.sprite))},forceEditing:e.fresh,value:e.sprite.properties.name,onChange:r}))}var pn=u((function(e,t){return function(){return e(Me(t))}})),mn=u((function(e,t){return function(n){n!==t.properties.name&&(e(Qe()),e(ze(Ee(t,(function(e){e.properties.name=n})))))}}));function hn(){var e,n,r=t.useContext(m),a=r.dispatch,i=r.state,l=o(cn(),2),u=l[0],c=l[1],s=ut(i),f=vn(a,i.scene.selection,u);return t.createElement("div",{className:"properties-panel"},null==s?"Select an object to see its sprites.":t.createElement(t.Fragment,null,t.createElement("div",{className:"list-container"},t.createElement(Jt,{renderItem:f,data:s.sprites})),t.createElement("div",{className:"actions-container"},t.createElement(Gt,{onClick:function(){var e=String(S());c(e),a(Qe()),a(Te({ownerId:null==s?void 0:s.guid,spriteId:e}))},value:"+",tooltip:"Add sprite"}),t.createElement(Gt,{disabled:"sprite"!==(null===(e=i.scene.selection)||void 0===e?void 0:e.type),onClick:function(){a(Qe()),a(Le())},value:"-",tooltip:"Remove sprite"}),t.createElement(Gt,{disabled:"sprite"!==(null===(n=i.scene.selection)||void 0===n?void 0:n.type),onClick:function(){var e=String(S());c(e),a(Qe()),a(Re({newId:e}))},value:"dup",tooltip:"Duplicate sprite"}))))}var vn=u((function(e,n,r){return function(a){return t.createElement(dn,{selected:"sprite"===(null==n?void 0:n.type)&&n.spriteId===a.spriteId,fresh:r===a.spriteId,dispatch:e,sprite:a,key:a.spriteId})}}));function gn(){var e=t.useContext(m).state,n=o(t.useState(0),2),r=n[0],a=n[1],i=o(t.useState(null),2),l=i[0],u=i[1];return t.useEffect((function(){var t,n;l!=e.scene.selection&&("geometry"===(null===(t=e.scene.selection)||void 0===t?void 0:t.type)?a(1):"sprite"===(null===(n=e.scene.selection)||void 0===n?void 0:n.type)&&a(0),u(e.scene.selection))}),[e.scene.selection]),t.createElement(st,{title:"Object"},t.createElement(Kt,{selectedTab:r,onTabSelect:a},t.createElement($t,{title:"Sprites"},t.createElement(hn,null)),t.createElement($t,{title:"Geometries"},t.createElement(sn,null))))}function yn(e){var n,r=bn(e.dispatch,e.object.guid),a=wn(e.dispatch,e.object);return t.createElement(rn,{key:e.object.guid,onClick:r,selected:(null===(n=e.selection)||void 0===n?void 0:n.objectId)===e.object.guid},t.createElement(Zt,{height:2,forceEditing:!!e.fresh||void 0,value:e.object.properties.name,onChange:a}))}var bn=u((function(e,t){return function(){return e(Pe({guid:t}))}})),wn=u((function(e,t){return function(n){n!==t.properties.name&&(e(Qe()),e(Oe(Ee(t,(function(e){e.properties.name=n})))))}}));function kn(){var e=t.useContext(m),n=e.state,r=e.dispatch,a=o(cn(),2),i=a[0],l=a[1];return t.createElement(st,{title:"Scene"},t.createElement("div",{className:"objects-panel"},t.createElement("div",{className:"list-container"},t.createElement(Jt,{renderItem:Cn(r,n.scene.selection,i),data:n.scene.objects})),t.createElement("div",{className:"actions-container"},t.createElement(Gt,{onClick:_n(r,l),value:"+",tooltip:"Add object"}),t.createElement(Gt,{onClick:En(r),value:"-",tooltip:"Remove object"}),t.createElement(Gt,{onClick:xn(r),value:"▲",tooltip:"Move object up"}),t.createElement(Gt,{onClick:Sn(r),value:"▼",tooltip:"Move object down"}))))}var _n=u((function(e,t){return function(){var n=String(S());t(n),e(Qe()),e(Se({guid:n}))}})),En=u((function(e){return function(){e(Qe()),e(Ce())}})),xn=u((function(e){return function(){e(Qe()),e(Ie())}})),Sn=u((function(e){return function(){e(Qe()),e(Ne())}})),Cn=u((function(e,n,r){return function(a){return t.createElement(yn,{selection:n,fresh:r===a.guid,dispatch:e,object:a,key:a.guid})}}));function Pn(e){var n=t.useContext(m).dispatch;return t.createElement(st,{title:"Sprite"},t.createElement("div",{className:"ui-form"},t.createElement("div",{className:"ui-form-row"},t.createElement("label",{className:"label",htmlFor:"sprite-src"},"src"),t.createElement(ct,{value:e.sprite.properties.src,onChange:function(t){n(Qe()),n(ze(xe(e.sprite,(function(e){e.properties.src=t}))))},id:"sprite-src"})),t.createElement("div",{className:"ui-form-row"},t.createElement("label",{className:"label",htmlFor:"sprite-width"},"width"),t.createElement(ct,{value:String(e.sprite.properties.transform.scaleX),type:"number",onChange:function(t){n(Qe()),n(ze(xe(e.sprite,(function(e){e.properties.transform.scaleX=Number(t)}))))},id:"sprite-width"})),t.createElement("div",{className:"ui-form-row"},t.createElement("label",{className:"label",htmlFor:"sprite-height"},"height"),t.createElement(ct,{value:String(e.sprite.properties.transform.scaleY),type:"number",onChange:function(t){n(Qe()),n(ze(xe(e.sprite,(function(e){e.properties.transform.scaleY=Number(t)}))))},id:"sprite-height"})),t.createElement("div",{className:"ui-form-row"},t.createElement("label",{className:"label",htmlFor:"sprite-height"},"background"),t.createElement("input",{type:"checkbox",checked:e.sprite.properties.background,onChange:function(t){n(Qe()),n(ze(xe(e.sprite,(function(e){e.properties.background=t.target.checked}))))}}))))}function On(){var e,n=t.useContext(m),r=n.state,a=n.dispatch,o=at.get(),i="geometry"===(null===(e=r.scene.selection)||void 0===e?void 0:e.type);return t.createElement("div",{className:"toolbar"},t.createElement(Gt,{onClick:function(){return a(Ge())},value:"↩",disabled:null==r.undoStack}),t.createElement(Gt,{onClick:function(){return a(qe())},value:"↪",disabled:null==r.redoStack}),t.createElement(Gt,{onClick:o.save,value:"💾"}),t.createElement(Gt,{onClick:o.load,value:"⬇️"}),t.createElement(Gt,{onClick:In(a),value:"✨",active:r.gridConfig.enabled}),t.createElement(Gt,{onClick:Nn(a),value:"🔸",disabled:!i}),t.createElement(Gt,{onClick:jn(a),value:"🔹",disabled:!i}))}var In=u((function(e){return function(t){t.preventDefault(),t.stopPropagation(),e(tt())}})),Nn=u((function(e){return function(t){t.preventDefault(),t.stopPropagation(),e(Qe()),e(Ue())}})),jn=u((function(e){return function(t){t.preventDefault(),t.stopPropagation(),e(Qe()),e(Ye())}}));function Tn(){var e=t.useContext(m).state,n=lt(e);rt.get().useKeyboardShortcuts();var r=nt.get(),a=at.get();return t.useEffect((function(){a.load()}),[]),t.createElement("div",{className:"workbench",onMouseMove:r.onWorkbenchMouseMove,onMouseUp:r.onWorkbenchMouseUp},t.createElement(On,null),t.createElement("div",{className:"central-container"},t.createElement(Xt,null,t.createElement(kn,null),t.createElement(gt,null)),t.createElement(Ut,null),t.createElement(Xt,null,t.createElement(gn,null),null!=n?t.createElement(Pn,{sprite:n}):void 0)),e.grabbedThing?t.createElement(Bt,{grabbedThing:e.grabbedThing}):void 0)}var zn=l((function(e,t){return{state:e,dispatch:t}}));r.render(t.createElement((function(){var e=o(t.useReducer(it,p),2),n=e[0],r=e[1];return t.createElement(m.Provider,{value:zn(n,r)},t.createElement(f,{injectors:[P.injector((function(){return[n.viewport,n.canvasRect]})),d.injector((function(){return[n.gridConfig,P.get()]})),O.injector((function(){return[]})),ot.injector((function(){return[]})),C.injector((function(){return[]})),at.injector((function(){return[n.scene,r,ot.get(),C.get(),O.get()]})),rt.injector((function(){return[r,at.get()]})),nt.injector((function(){return[P.get(),d.get(),n.grabbedThing,n.scene,r]}))]},t.createElement(Tn,null)))})),document.getElementById("app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,